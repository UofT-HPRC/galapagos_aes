-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity broadcaster is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TID : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of broadcaster is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "broadcaster,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.018000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=213,HLS_SYN_LUT=419,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ID_table_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ID_table_V_ce0 : STD_LOGIC;
    signal ID_table_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal flit_count_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal bcast_buffer_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bcast_buffer_data_V_ce0 : STD_LOGIC;
    signal bcast_buffer_data_V_we0 : STD_LOGIC;
    signal bcast_buffer_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal bcast_buffer_last_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bcast_buffer_last_V_ce0 : STD_LOGIC;
    signal bcast_buffer_last_V_we0 : STD_LOGIC;
    signal bcast_buffer_last_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal bcast_buffer_id_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bcast_buffer_id_V_ce0 : STD_LOGIC;
    signal bcast_buffer_id_V_we0 : STD_LOGIC;
    signal bcast_buffer_id_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bcast_buffer_user_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bcast_buffer_user_V_ce0 : STD_LOGIC;
    signal bcast_buffer_user_V_we0 : STD_LOGIC;
    signal bcast_buffer_user_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bcast_buffer_keep_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bcast_buffer_keep_V_ce0 : STD_LOGIC;
    signal bcast_buffer_keep_V_we0 : STD_LOGIC;
    signal bcast_buffer_keep_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_nbreadreq_fu_96_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_nbwritereq_fu_130_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_data_V_reg_502 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_dest_V_1_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_reg_513 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_520 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_reg_528 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_keep_V_reg_534 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln879_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ID_table_V_addr_1_reg_549 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln209_cast_fu_403_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln209_cast_reg_557 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal pkt_in_dest_V_fu_411_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pkt_in_dest_V_reg_562 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln700_fu_428_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln700_reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_io : BOOLEAN;
    signal sext_ln887_fu_444_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln887_reg_579 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln887_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_2_fu_467_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_dest_V_2_reg_592 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal j_fu_476_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln824_fu_482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln824_reg_605 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln822_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_486_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_op_assign_reg_308 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_op_assign_1_reg_320 : STD_LOGIC_VECTOR (7 downto 0);
    signal flit_count_V_new_0_reg_331 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln818_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln209_fu_380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_391_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln209_1_fu_462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_state2_io : BOOLEAN;
    signal tmp_4_fu_372_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln895_fu_385_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln209_fu_400_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln209_1_fu_453_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln209_fu_457_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);

    component broadcaster_ID_table_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component broadcaster_bcast_buffer_data_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component broadcaster_bcast_buffer_last_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component broadcaster_bcast_buffer_id_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component broadcaster_bcast_buffer_user_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    ID_table_V_U : component broadcaster_ID_table_V
    generic map (
        DataWidth => 4,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ID_table_V_address0,
        ce0 => ID_table_V_ce0,
        q0 => ID_table_V_q0);

    bcast_buffer_data_V_U : component broadcaster_bcast_buffer_data_V
    generic map (
        DataWidth => 64,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bcast_buffer_data_V_address0,
        ce0 => bcast_buffer_data_V_ce0,
        we0 => bcast_buffer_data_V_we0,
        d0 => tmp_data_V_reg_502,
        q0 => bcast_buffer_data_V_q0);

    bcast_buffer_last_V_U : component broadcaster_bcast_buffer_last_V
    generic map (
        DataWidth => 1,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bcast_buffer_last_V_address0,
        ce0 => bcast_buffer_last_V_ce0,
        we0 => bcast_buffer_last_V_we0,
        d0 => tmp_last_V_reg_513,
        q0 => bcast_buffer_last_V_q0);

    bcast_buffer_id_V_U : component broadcaster_bcast_buffer_id_V
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bcast_buffer_id_V_address0,
        ce0 => bcast_buffer_id_V_ce0,
        we0 => bcast_buffer_id_V_we0,
        d0 => tmp_id_V_reg_520,
        q0 => bcast_buffer_id_V_q0);

    bcast_buffer_user_V_U : component broadcaster_bcast_buffer_user_V
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bcast_buffer_user_V_address0,
        ce0 => bcast_buffer_user_V_ce0,
        we0 => bcast_buffer_user_V_we0,
        d0 => tmp_user_V_reg_528,
        q0 => bcast_buffer_user_V_q0);

    bcast_buffer_keep_V_U : component broadcaster_bcast_buffer_id_V
    generic map (
        DataWidth => 8,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bcast_buffer_keep_V_address0,
        ce0 => bcast_buffer_keep_V_ce0,
        we0 => bcast_buffer_keep_V_we0,
        d0 => tmp_keep_V_reg_534,
        q0 => bcast_buffer_keep_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    flit_count_V_new_0_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_fu_448_p2 = ap_const_lv1_0))) then 
                flit_count_V_new_0_reg_331 <= ap_const_lv8_0;
            elsif (((ap_const_lv1_0 = and_ln818_fu_439_p2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
                flit_count_V_new_0_reg_331 <= add_ln700_fu_428_p2;
            end if; 
        end if;
    end process;

    i_op_assign_1_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_op_assign_1_reg_320 <= ap_const_lv8_0;
            elsif (((out_r_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_op_assign_1_reg_320 <= j_reg_600;
            end if; 
        end if;
    end process;

    i_op_assign_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_op_assign_reg_308 <= ap_const_lv9_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln822_fu_471_p2 = ap_const_lv1_1))) then 
                i_op_assign_reg_308 <= i_fu_486_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln879_fu_366_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) then
                    ID_table_V_addr_1_reg_549(4 downto 2) <= tmp_5_fu_391_p3(5 - 1 downto 0)(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then
                add_ln700_reg_570 <= add_ln700_fu_428_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln879_reg_540 = ap_const_lv1_1) and (tmp_reg_498 = ap_const_lv1_1))) then
                flit_count_V <= flit_count_V_new_0_reg_331;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) then
                icmp_ln879_reg_540 <= icmp_ln879_fu_366_p2;
                tmp_data_V_reg_502 <= in_r_TDATA;
                tmp_dest_V_1_reg_508 <= in_r_TDEST;
                tmp_id_V_reg_520 <= in_r_TID;
                tmp_keep_V_reg_534 <= in_r_TKEEP;
                tmp_last_V_reg_513 <= in_r_TLAST;
                tmp_user_V_reg_528 <= in_r_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                j_reg_600 <= j_fu_476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                pkt_in_dest_V_reg_562 <= pkt_in_dest_V_fu_411_p1;
                    zext_ln209_cast_reg_557(5 downto 2) <= zext_ln209_cast_fu_403_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                sext_ln887_reg_579 <= sext_ln887_fu_444_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_dest_V_2_reg_592 <= tmp_dest_V_2_fu_467_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_498 <= tmp_nbreadreq_fu_96_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln822_fu_471_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    zext_ln824_reg_605(7 downto 0) <= zext_ln824_fu_482_p1(7 downto 0);
            end if;
        end if;
    end process;
    ID_table_V_addr_1_reg_549(1 downto 0) <= "11";
    zext_ln209_cast_reg_557(1 downto 0) <= "00";
    zext_ln824_reg_605(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (in_r_TVALID, out_r_TREADY, ap_CS_fsm, ap_CS_fsm_state1, tmp_nbreadreq_fu_96_p8, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, icmp_ln879_fu_366_p2, ap_block_state4_io, ap_CS_fsm_state6, icmp_ln887_fu_448_p2, ap_CS_fsm_state8, icmp_ln822_fu_471_p2, ap_CS_fsm_state9, and_ln818_fu_439_p2, ap_block_state2_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln879_fu_366_p2 = ap_const_lv1_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln879_fu_366_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_lv1_0 = and_ln818_fu_439_p2) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (ap_const_lv1_1 = and_ln818_fu_439_p2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_fu_448_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln822_fu_471_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((out_r_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    ID_table_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ID_table_V_addr_1_reg_549, ap_CS_fsm_state6, zext_ln209_fu_380_p1, zext_ln209_1_fu_462_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ID_table_V_address0 <= zext_ln209_1_fu_462_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ID_table_V_address0 <= ID_table_V_addr_1_reg_549;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ID_table_V_address0 <= zext_ln209_fu_380_p1(5 - 1 downto 0);
        else 
            ID_table_V_address0 <= "XXXXX";
        end if; 
    end process;


    ID_table_V_ce0_assign_proc : process(in_r_TVALID, ap_CS_fsm_state1, tmp_nbreadreq_fu_96_p8, ap_CS_fsm_state4, ap_block_state4_io, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io)) or (not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ID_table_V_ce0 <= ap_const_logic_1;
        else 
            ID_table_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln209_fu_457_p2 <= std_logic_vector(unsigned(trunc_ln209_1_fu_453_p1) + unsigned(zext_ln209_cast_reg_557));
    add_ln700_fu_428_p2 <= std_logic_vector(unsigned(flit_count_V) + unsigned(ap_const_lv8_1));
    and_ln818_fu_439_p2 <= (tmp_last_V_reg_513 and icmp_ln895_fu_434_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(in_r_TVALID, tmp_nbreadreq_fu_96_p8)
    begin
                ap_block_state1 <= ((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1));
    end process;


    ap_block_state2_io_assign_proc : process(out_r_TREADY, grp_nbwritereq_fu_130_p8)
    begin
                ap_block_state2_io <= ((out_r_TREADY = ap_const_logic_0) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1));
    end process;


    ap_block_state4_io_assign_proc : process(out_r_TREADY, grp_nbwritereq_fu_130_p8)
    begin
                ap_block_state4_io <= ((out_r_TREADY = ap_const_logic_0) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    bcast_buffer_data_V_address0_assign_proc : process(ap_CS_fsm_state4, zext_ln824_reg_605, ap_CS_fsm_state9, zext_ln544_fu_419_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcast_buffer_data_V_address0 <= zext_ln824_reg_605(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bcast_buffer_data_V_address0 <= zext_ln544_fu_419_p1(7 - 1 downto 0);
        else 
            bcast_buffer_data_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bcast_buffer_data_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_io, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io)))) then 
            bcast_buffer_data_V_ce0 <= ap_const_logic_1;
        else 
            bcast_buffer_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_data_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_block_state4_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            bcast_buffer_data_V_we0 <= ap_const_logic_1;
        else 
            bcast_buffer_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_id_V_address0_assign_proc : process(ap_CS_fsm_state4, zext_ln824_reg_605, ap_CS_fsm_state9, zext_ln544_fu_419_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcast_buffer_id_V_address0 <= zext_ln824_reg_605(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bcast_buffer_id_V_address0 <= zext_ln544_fu_419_p1(7 - 1 downto 0);
        else 
            bcast_buffer_id_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bcast_buffer_id_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_io, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io)))) then 
            bcast_buffer_id_V_ce0 <= ap_const_logic_1;
        else 
            bcast_buffer_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_id_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_block_state4_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            bcast_buffer_id_V_we0 <= ap_const_logic_1;
        else 
            bcast_buffer_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_keep_V_address0_assign_proc : process(ap_CS_fsm_state4, zext_ln824_reg_605, ap_CS_fsm_state9, zext_ln544_fu_419_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcast_buffer_keep_V_address0 <= zext_ln824_reg_605(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bcast_buffer_keep_V_address0 <= zext_ln544_fu_419_p1(7 - 1 downto 0);
        else 
            bcast_buffer_keep_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bcast_buffer_keep_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_io, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io)))) then 
            bcast_buffer_keep_V_ce0 <= ap_const_logic_1;
        else 
            bcast_buffer_keep_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_keep_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_block_state4_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            bcast_buffer_keep_V_we0 <= ap_const_logic_1;
        else 
            bcast_buffer_keep_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_last_V_address0_assign_proc : process(ap_CS_fsm_state4, zext_ln824_reg_605, ap_CS_fsm_state9, zext_ln544_fu_419_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcast_buffer_last_V_address0 <= zext_ln824_reg_605(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bcast_buffer_last_V_address0 <= zext_ln544_fu_419_p1(7 - 1 downto 0);
        else 
            bcast_buffer_last_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bcast_buffer_last_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_io, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io)))) then 
            bcast_buffer_last_V_ce0 <= ap_const_logic_1;
        else 
            bcast_buffer_last_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_last_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_block_state4_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            bcast_buffer_last_V_we0 <= ap_const_logic_1;
        else 
            bcast_buffer_last_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_user_V_address0_assign_proc : process(ap_CS_fsm_state4, zext_ln824_reg_605, ap_CS_fsm_state9, zext_ln544_fu_419_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcast_buffer_user_V_address0 <= zext_ln824_reg_605(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bcast_buffer_user_V_address0 <= zext_ln544_fu_419_p1(7 - 1 downto 0);
        else 
            bcast_buffer_user_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    bcast_buffer_user_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_block_state4_io, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io)))) then 
            bcast_buffer_user_V_ce0 <= ap_const_logic_1;
        else 
            bcast_buffer_user_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bcast_buffer_user_V_we0_assign_proc : process(ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_block_state4_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            bcast_buffer_user_V_we0 <= ap_const_logic_1;
        else 
            bcast_buffer_user_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_nbwritereq_fu_130_p8 <= (0=>out_r_TREADY, others=>'-');
    i_fu_486_p2 <= std_logic_vector(unsigned(i_op_assign_reg_308) + unsigned(ap_const_lv9_1));
    icmp_ln822_fu_471_p2 <= "1" when (i_op_assign_1_reg_320 = add_ln700_reg_570) else "0";
    icmp_ln879_fu_366_p2 <= "1" when (in_r_TDEST = ap_const_lv8_FF) else "0";
    icmp_ln887_fu_448_p2 <= "1" when (unsigned(i_op_assign_reg_308) < unsigned(sext_ln887_reg_579)) else "0";
    icmp_ln895_fu_434_p2 <= "1" when (unsigned(tmp_id_V_reg_520) < unsigned(ap_const_lv8_3)) else "0";

    in_r_TDATA_blk_n_assign_proc : process(in_r_TVALID, ap_CS_fsm_state1, tmp_nbreadreq_fu_96_p8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(in_r_TVALID, ap_CS_fsm_state1, tmp_nbreadreq_fu_96_p8)
    begin
        if ((not(((in_r_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_nbreadreq_fu_96_p8 = ap_const_lv1_1))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_476_p2 <= std_logic_vector(unsigned(i_op_assign_1_reg_320) + unsigned(ap_const_lv8_1));
    or_ln895_fu_385_p2 <= (tmp_4_fu_372_p3 or ap_const_lv10_3);

    out_r_TDATA_assign_proc : process(bcast_buffer_data_V_q0, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_data_V_reg_502)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_r_TDATA <= bcast_buffer_data_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TDATA <= tmp_data_V_reg_502;
        else 
            out_r_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_TDATA_blk_n_assign_proc : process(out_r_TREADY, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TDATA_blk_n <= out_r_TREADY;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_TDEST_assign_proc : process(ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_dest_V_1_reg_508, pkt_in_dest_V_reg_562, tmp_dest_V_2_reg_592)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_r_TDEST <= tmp_dest_V_2_reg_592;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            out_r_TDEST <= pkt_in_dest_V_reg_562;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1))) then 
            out_r_TDEST <= tmp_dest_V_1_reg_508;
        else 
            out_r_TDEST <= "XXXXXXXX";
        end if; 
    end process;


    out_r_TID_assign_proc : process(bcast_buffer_id_V_q0, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_id_V_reg_520)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_r_TID <= bcast_buffer_id_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TID <= tmp_id_V_reg_520;
        else 
            out_r_TID <= "XXXXXXXX";
        end if; 
    end process;


    out_r_TKEEP_assign_proc : process(bcast_buffer_keep_V_q0, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_keep_V_reg_534)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_r_TKEEP <= bcast_buffer_keep_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TKEEP <= tmp_keep_V_reg_534;
        else 
            out_r_TKEEP <= "XXXXXXXX";
        end if; 
    end process;


    out_r_TLAST_assign_proc : process(bcast_buffer_last_V_q0, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_last_V_reg_513)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_r_TLAST <= bcast_buffer_last_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TLAST <= tmp_last_V_reg_513;
        else 
            out_r_TLAST <= "X";
        end if; 
    end process;


    out_r_TUSER_assign_proc : process(bcast_buffer_user_V_q0, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, tmp_user_V_reg_528)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            out_r_TUSER <= bcast_buffer_user_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TUSER <= tmp_user_V_reg_528;
        else 
            out_r_TUSER <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_TVALID_assign_proc : process(out_r_TREADY, ap_CS_fsm_state4, grp_nbwritereq_fu_130_p8, ap_CS_fsm_state10, ap_CS_fsm_state2, ap_block_state4_io, ap_block_state2_io)
    begin
        if ((((out_r_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_io) and (grp_nbwritereq_fu_130_p8 = ap_const_lv1_1)))) then 
            out_r_TVALID <= ap_const_logic_1;
        else 
            out_r_TVALID <= ap_const_logic_0;
        end if; 
    end process;

        pkt_in_dest_V_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ID_table_V_q0),8));

        sext_ln887_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ID_table_V_q0),9));

    tmp_4_fu_372_p3 <= (in_r_TID & ap_const_lv2_0);
    tmp_5_fu_391_p3 <= (ap_const_lv54_0 & or_ln895_fu_385_p2);
        tmp_dest_V_2_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ID_table_V_q0),8));

    tmp_nbreadreq_fu_96_p8 <= (0=>(in_r_TVALID), others=>'-');
    trunc_ln209_1_fu_453_p1 <= i_op_assign_reg_308(6 - 1 downto 0);
    trunc_ln209_fu_400_p1 <= tmp_id_V_reg_520(4 - 1 downto 0);
    zext_ln209_1_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln209_fu_457_p2),64));
    zext_ln209_cast_fu_403_p3 <= (trunc_ln209_fu_400_p1 & ap_const_lv2_0);
    zext_ln209_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_372_p3),64));
    zext_ln544_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(flit_count_V),64));
    zext_ln824_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_1_reg_320),64));
end behav;

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module txPath (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        arp_status_V_dout,
        arp_status_V_empty_n,
        arp_status_V_read,
        rxGalapagosBridge_TVALID,
        lbTxDataOut_TREADY,
        rxGalapagosBridge_TDATA,
        rxGalapagosBridge_TREADY,
        rxGalapagosBridge_TKEEP,
        rxGalapagosBridge_TLAST,
        lbTxDataOut_TDATA,
        lbTxDataOut_TVALID,
        lbTxDataOut_TKEEP,
        lbTxDataOut_TLAST,
        remote_ip_tx_V,
        remote_ip_tx_V_ap_vld,
        tx_state_V,
        tx_state_V_ap_vld,
        ip_table_V_Addr_A,
        ip_table_V_EN_A,
        ip_table_V_WEN_A,
        ip_table_V_Din_A,
        ip_table_V_Dout_A
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1:0] arp_status_V_dout;
input   arp_status_V_empty_n;
output   arp_status_V_read;
input   rxGalapagosBridge_TVALID;
input   lbTxDataOut_TREADY;
input  [511:0] rxGalapagosBridge_TDATA;
output   rxGalapagosBridge_TREADY;
input  [15:0] rxGalapagosBridge_TKEEP;
input  [0:0] rxGalapagosBridge_TLAST;
output  [511:0] lbTxDataOut_TDATA;
output   lbTxDataOut_TVALID;
output  [15:0] lbTxDataOut_TKEEP;
output  [0:0] lbTxDataOut_TLAST;
output  [31:0] remote_ip_tx_V;
output   remote_ip_tx_V_ap_vld;
output  [3:0] tx_state_V;
output   tx_state_V_ap_vld;
output  [31:0] ip_table_V_Addr_A;
output   ip_table_V_EN_A;
output  [3:0] ip_table_V_WEN_A;
output  [31:0] ip_table_V_Din_A;
input  [31:0] ip_table_V_Dout_A;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg arp_status_V_read;
reg rxGalapagosBridge_TREADY;
reg remote_ip_tx_V_ap_vld;
reg tx_state_V_ap_vld;
reg ip_table_V_EN_A;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [2:0] sinkState_load_reg_386;
reg   [0:0] tmp_1_reg_390;
reg    ap_predicate_op25_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
wire    lbTxDataOut_V_data_V_1_ack_in;
reg    ap_predicate_op29_write_state2;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage1_11001;
reg   [511:0] lbTxDataOut_V_data_V_1_data_in;
reg   [511:0] lbTxDataOut_V_data_V_1_data_out;
reg    lbTxDataOut_V_data_V_1_vld_in;
wire    lbTxDataOut_V_data_V_1_vld_out;
wire    lbTxDataOut_V_data_V_1_ack_out;
reg   [511:0] lbTxDataOut_V_data_V_1_payload_A;
reg   [511:0] lbTxDataOut_V_data_V_1_payload_B;
reg    lbTxDataOut_V_data_V_1_sel_rd;
reg    lbTxDataOut_V_data_V_1_sel_wr;
wire    lbTxDataOut_V_data_V_1_sel;
wire    lbTxDataOut_V_data_V_1_load_A;
wire    lbTxDataOut_V_data_V_1_load_B;
reg   [1:0] lbTxDataOut_V_data_V_1_state;
wire    lbTxDataOut_V_data_V_1_state_cmp_full;
reg   [15:0] lbTxDataOut_V_keep_V_1_data_in;
reg   [15:0] lbTxDataOut_V_keep_V_1_data_out;
reg    lbTxDataOut_V_keep_V_1_vld_in;
wire    lbTxDataOut_V_keep_V_1_vld_out;
wire    lbTxDataOut_V_keep_V_1_ack_in;
wire    lbTxDataOut_V_keep_V_1_ack_out;
reg   [15:0] lbTxDataOut_V_keep_V_1_payload_A;
reg   [15:0] lbTxDataOut_V_keep_V_1_payload_B;
reg    lbTxDataOut_V_keep_V_1_sel_rd;
reg    lbTxDataOut_V_keep_V_1_sel_wr;
wire    lbTxDataOut_V_keep_V_1_sel;
wire    lbTxDataOut_V_keep_V_1_load_A;
wire    lbTxDataOut_V_keep_V_1_load_B;
reg   [1:0] lbTxDataOut_V_keep_V_1_state;
wire    lbTxDataOut_V_keep_V_1_state_cmp_full;
reg   [0:0] lbTxDataOut_V_last_V_1_data_in;
reg   [0:0] lbTxDataOut_V_last_V_1_data_out;
reg    lbTxDataOut_V_last_V_1_vld_in;
wire    lbTxDataOut_V_last_V_1_vld_out;
wire    lbTxDataOut_V_last_V_1_ack_in;
wire    lbTxDataOut_V_last_V_1_ack_out;
reg   [0:0] lbTxDataOut_V_last_V_1_payload_A;
reg   [0:0] lbTxDataOut_V_last_V_1_payload_B;
reg    lbTxDataOut_V_last_V_1_sel_rd;
reg    lbTxDataOut_V_last_V_1_sel_wr;
wire    lbTxDataOut_V_last_V_1_sel;
wire    lbTxDataOut_V_last_V_1_load_A;
wire    lbTxDataOut_V_last_V_1_load_B;
reg   [1:0] lbTxDataOut_V_last_V_1_state;
wire    lbTxDataOut_V_last_V_1_state_cmp_full;
reg   [31:0] dest_ip_addr_V;
reg   [2:0] sinkState;
reg   [511:0] header_data_V;
reg   [15:0] header_keep_V;
reg   [0:0] header_last_V;
reg   [31:0] old_dest_ip_V;
reg   [2:0] counter_V;
reg    rxGalapagosBridge_TDATA_blk_n;
wire    ap_block_pp0_stage0;
wire   [2:0] sinkState_load_load_fu_205_p1;
wire   [0:0] grp_nbreadreq_fu_103_p5;
wire    ap_block_pp0_stage1;
reg    lbTxDataOut_TDATA_blk_n;
reg    arp_status_V_blk_n;
reg   [511:0] reg_195;
reg    ap_predicate_op10_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op75_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] reg_200;
reg   [0:0] tmp_reg_394;
reg   [0:0] tmp_last_V_1_reg_398;
wire   [0:0] icmp_ln879_fu_277_p2;
wire   [0:0] tmp_3_fu_301_p3;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [2:0] ap_phi_mux_storemerge126_i_phi_fu_167_p4;
wire   [2:0] select_ln129_fu_372_p3;
wire   [2:0] ap_phi_reg_pp0_iter0_storemerge126_i_reg_164;
wire   [0:0] icmp_ln883_fu_360_p2;
wire   [63:0] zext_ln544_fu_232_p1;
wire   [2:0] select_ln180_fu_257_p3;
wire   [2:0] select_ln151_fu_283_p3;
wire   [2:0] add_ln700_fu_309_p2;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
wire   [31:0] ip_table_V_Addr_A_orig;
wire   [7:0] tmp_2_fu_214_p4;
wire   [9:0] ret_V_fu_224_p3;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
reg    ap_condition_442;
reg    ap_condition_563;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 lbTxDataOut_V_data_V_1_sel_rd = 1'b0;
#0 lbTxDataOut_V_data_V_1_sel_wr = 1'b0;
#0 lbTxDataOut_V_data_V_1_state = 2'd0;
#0 lbTxDataOut_V_keep_V_1_sel_rd = 1'b0;
#0 lbTxDataOut_V_keep_V_1_sel_wr = 1'b0;
#0 lbTxDataOut_V_keep_V_1_state = 2'd0;
#0 lbTxDataOut_V_last_V_1_sel_rd = 1'b0;
#0 lbTxDataOut_V_last_V_1_sel_wr = 1'b0;
#0 lbTxDataOut_V_last_V_1_state = 2'd0;
#0 dest_ip_addr_V = 32'd0;
#0 sinkState = 3'd0;
#0 header_data_V = 512'd0;
#0 header_keep_V = 16'd0;
#0 header_last_V = 1'd0;
#0 old_dest_ip_V = 32'd0;
#0 counter_V = 3'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((lbTxDataOut_V_data_V_1_ack_out == 1'b1) & (lbTxDataOut_V_data_V_1_vld_out == 1'b1))) begin
            lbTxDataOut_V_data_V_1_sel_rd <= ~lbTxDataOut_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((lbTxDataOut_V_data_V_1_vld_in == 1'b1) & (lbTxDataOut_V_data_V_1_ack_in == 1'b1))) begin
            lbTxDataOut_V_data_V_1_sel_wr <= ~lbTxDataOut_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((lbTxDataOut_V_data_V_1_vld_in == 1'b0) & (lbTxDataOut_V_data_V_1_state == 2'd2)) | ((lbTxDataOut_V_data_V_1_vld_in == 1'b0) & (lbTxDataOut_V_data_V_1_ack_out == 1'b1) & (lbTxDataOut_V_data_V_1_state == 2'd3)))) begin
            lbTxDataOut_V_data_V_1_state <= 2'd2;
        end else if ((((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_state == 2'd1)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_vld_in == 1'b1) & (lbTxDataOut_V_data_V_1_state == 2'd3)))) begin
            lbTxDataOut_V_data_V_1_state <= 2'd1;
        end else if (((~((lbTxDataOut_V_data_V_1_vld_in == 1'b0) & (lbTxDataOut_V_data_V_1_ack_out == 1'b1)) & ~((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_vld_in == 1'b1)) & (lbTxDataOut_V_data_V_1_state == 2'd3)) | ((lbTxDataOut_V_data_V_1_ack_out == 1'b1) & (lbTxDataOut_V_data_V_1_state == 2'd1)) | ((lbTxDataOut_V_data_V_1_vld_in == 1'b1) & (lbTxDataOut_V_data_V_1_state == 2'd2)))) begin
            lbTxDataOut_V_data_V_1_state <= 2'd3;
        end else begin
            lbTxDataOut_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((lbTxDataOut_V_keep_V_1_ack_out == 1'b1) & (lbTxDataOut_V_keep_V_1_vld_out == 1'b1))) begin
            lbTxDataOut_V_keep_V_1_sel_rd <= ~lbTxDataOut_V_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_keep_V_1_sel_wr <= 1'b0;
    end else begin
        if (((lbTxDataOut_V_keep_V_1_ack_in == 1'b1) & (lbTxDataOut_V_keep_V_1_vld_in == 1'b1))) begin
            lbTxDataOut_V_keep_V_1_sel_wr <= ~lbTxDataOut_V_keep_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_keep_V_1_state <= 2'd0;
    end else begin
        if ((((lbTxDataOut_V_keep_V_1_vld_in == 1'b0) & (lbTxDataOut_V_keep_V_1_state == 2'd2)) | ((lbTxDataOut_V_keep_V_1_vld_in == 1'b0) & (lbTxDataOut_V_keep_V_1_ack_out == 1'b1) & (lbTxDataOut_V_keep_V_1_state == 2'd3)))) begin
            lbTxDataOut_V_keep_V_1_state <= 2'd2;
        end else if ((((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_state == 2'd1)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_vld_in == 1'b1) & (lbTxDataOut_V_keep_V_1_state == 2'd3)))) begin
            lbTxDataOut_V_keep_V_1_state <= 2'd1;
        end else if (((~((lbTxDataOut_V_keep_V_1_vld_in == 1'b0) & (lbTxDataOut_V_keep_V_1_ack_out == 1'b1)) & ~((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_vld_in == 1'b1)) & (lbTxDataOut_V_keep_V_1_state == 2'd3)) | ((lbTxDataOut_V_keep_V_1_ack_out == 1'b1) & (lbTxDataOut_V_keep_V_1_state == 2'd1)) | ((lbTxDataOut_V_keep_V_1_vld_in == 1'b1) & (lbTxDataOut_V_keep_V_1_state == 2'd2)))) begin
            lbTxDataOut_V_keep_V_1_state <= 2'd3;
        end else begin
            lbTxDataOut_V_keep_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((lbTxDataOut_V_last_V_1_ack_out == 1'b1) & (lbTxDataOut_V_last_V_1_vld_out == 1'b1))) begin
            lbTxDataOut_V_last_V_1_sel_rd <= ~lbTxDataOut_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((lbTxDataOut_V_last_V_1_ack_in == 1'b1) & (lbTxDataOut_V_last_V_1_vld_in == 1'b1))) begin
            lbTxDataOut_V_last_V_1_sel_wr <= ~lbTxDataOut_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        lbTxDataOut_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((lbTxDataOut_V_last_V_1_vld_in == 1'b0) & (lbTxDataOut_V_last_V_1_state == 2'd2)) | ((lbTxDataOut_V_last_V_1_vld_in == 1'b0) & (lbTxDataOut_V_last_V_1_ack_out == 1'b1) & (lbTxDataOut_V_last_V_1_state == 2'd3)))) begin
            lbTxDataOut_V_last_V_1_state <= 2'd2;
        end else if ((((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_state == 2'd1)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_vld_in == 1'b1) & (lbTxDataOut_V_last_V_1_state == 2'd3)))) begin
            lbTxDataOut_V_last_V_1_state <= 2'd1;
        end else if (((~((lbTxDataOut_V_last_V_1_vld_in == 1'b0) & (lbTxDataOut_V_last_V_1_ack_out == 1'b1)) & ~((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_vld_in == 1'b1)) & (lbTxDataOut_V_last_V_1_state == 2'd3)) | ((lbTxDataOut_V_last_V_1_ack_out == 1'b1) & (lbTxDataOut_V_last_V_1_state == 2'd1)) | ((lbTxDataOut_V_last_V_1_vld_in == 1'b1) & (lbTxDataOut_V_last_V_1_state == 2'd2)))) begin
            lbTxDataOut_V_last_V_1_state <= 2'd3;
        end else begin
            lbTxDataOut_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_563)) begin
        if ((tmp_3_fu_301_p3 == 1'd1)) begin
            counter_V <= 3'd0;
        end else if ((tmp_3_fu_301_p3 == 1'd0)) begin
            counter_V <= add_ln700_fu_309_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_394 == 1'd1) & (sinkState_load_reg_386 == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sinkState <= ap_phi_mux_storemerge126_i_phi_fu_167_p4;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_3_fu_301_p3 == 1'd1) & (sinkState_load_reg_386 == 3'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sinkState <= 3'd2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln879_fu_277_p2 == 1'd1) & (sinkState_load_reg_386 == 3'd2) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sinkState <= select_ln151_fu_283_p3;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & ((sinkState_load_reg_386 == 3'd3) | (sinkState_load_reg_386 == 3'd7))) | ((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        sinkState <= 3'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd5) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sinkState <= 3'd6;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_1_reg_390 == 1'd1) & (sinkState_load_reg_386 == 3'd6) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sinkState <= select_ln180_fu_257_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_394 == 1'd1) & (sinkState_load_reg_386 == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dest_ip_addr_V <= ip_table_V_Dout_A;
        header_data_V <= reg_195;
        header_keep_V <= reg_200;
        header_last_V <= tmp_last_V_1_reg_398;
    end
end

always @ (posedge ap_clk) begin
    if ((lbTxDataOut_V_data_V_1_load_A == 1'b1)) begin
        lbTxDataOut_V_data_V_1_payload_A <= lbTxDataOut_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((lbTxDataOut_V_data_V_1_load_B == 1'b1)) begin
        lbTxDataOut_V_data_V_1_payload_B <= lbTxDataOut_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((lbTxDataOut_V_keep_V_1_load_A == 1'b1)) begin
        lbTxDataOut_V_keep_V_1_payload_A <= lbTxDataOut_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((lbTxDataOut_V_keep_V_1_load_B == 1'b1)) begin
        lbTxDataOut_V_keep_V_1_payload_B <= lbTxDataOut_V_keep_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((lbTxDataOut_V_last_V_1_load_A == 1'b1)) begin
        lbTxDataOut_V_last_V_1_payload_A <= lbTxDataOut_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((lbTxDataOut_V_last_V_1_load_B == 1'b1)) begin
        lbTxDataOut_V_last_V_1_payload_B <= lbTxDataOut_V_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (tmp_reg_394 == 1'd1) & (sinkState_load_reg_386 == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln883_fu_360_p2 == 1'd0))) begin
        old_dest_ip_V <= ip_table_V_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (tmp_1_reg_390 == 1'd1) & (sinkState_load_reg_386 == 3'd6) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((grp_nbreadreq_fu_103_p5 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (sinkState == 3'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_195 <= rxGalapagosBridge_TDATA;
        reg_200 <= rxGalapagosBridge_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sinkState_load_reg_386 <= sinkState;
    end
end

always @ (posedge ap_clk) begin
    if (((sinkState_load_load_fu_205_p1 == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_390 <= grp_nbreadreq_fu_103_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nbreadreq_fu_103_p5 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (sinkState == 3'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_1_reg_398 <= rxGalapagosBridge_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (sinkState == 3'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_394 <= grp_nbreadreq_fu_103_p5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_442)) begin
        if ((icmp_ln883_fu_360_p2 == 1'd0)) begin
            ap_phi_mux_storemerge126_i_phi_fu_167_p4 = 3'd1;
        end else if ((icmp_ln883_fu_360_p2 == 1'd1)) begin
            ap_phi_mux_storemerge126_i_phi_fu_167_p4 = select_ln129_fu_372_p3;
        end else begin
            ap_phi_mux_storemerge126_i_phi_fu_167_p4 = ap_phi_reg_pp0_iter0_storemerge126_i_reg_164;
        end
    end else begin
        ap_phi_mux_storemerge126_i_phi_fu_167_p4 = ap_phi_reg_pp0_iter0_storemerge126_i_reg_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        arp_status_V_blk_n = arp_status_V_empty_n;
    end else begin
        arp_status_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        arp_status_V_read = 1'b1;
    end else begin
        arp_status_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ip_table_V_EN_A = 1'b1;
    end else begin
        ip_table_V_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((sinkState_load_reg_386 == 3'd4) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((sinkState_load_reg_386 == 3'd5) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1)) | ((sinkState_load_reg_386 == 3'd4) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sinkState_load_reg_386 == 3'd5) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_1_reg_390 == 1'd1) & (sinkState_load_reg_386 == 3'd6) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lbTxDataOut_TDATA_blk_n = lbTxDataOut_V_data_V_1_state[1'd1];
    end else begin
        lbTxDataOut_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((sinkState_load_reg_386 == 3'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((sinkState_load_reg_386 == 3'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        lbTxDataOut_V_data_V_1_data_in = header_data_V;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1))) begin
        lbTxDataOut_V_data_V_1_data_in = rxGalapagosBridge_TDATA;
    end else begin
        lbTxDataOut_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((lbTxDataOut_V_data_V_1_sel == 1'b1)) begin
        lbTxDataOut_V_data_V_1_data_out = lbTxDataOut_V_data_V_1_payload_B;
    end else begin
        lbTxDataOut_V_data_V_1_data_out = lbTxDataOut_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd5) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1)))) begin
        lbTxDataOut_V_data_V_1_vld_in = 1'b1;
    end else begin
        lbTxDataOut_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((sinkState_load_reg_386 == 3'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((sinkState_load_reg_386 == 3'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        lbTxDataOut_V_keep_V_1_data_in = header_keep_V;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1))) begin
        lbTxDataOut_V_keep_V_1_data_in = rxGalapagosBridge_TKEEP;
    end else begin
        lbTxDataOut_V_keep_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((lbTxDataOut_V_keep_V_1_sel == 1'b1)) begin
        lbTxDataOut_V_keep_V_1_data_out = lbTxDataOut_V_keep_V_1_payload_B;
    end else begin
        lbTxDataOut_V_keep_V_1_data_out = lbTxDataOut_V_keep_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd5) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1)))) begin
        lbTxDataOut_V_keep_V_1_vld_in = 1'b1;
    end else begin
        lbTxDataOut_V_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((sinkState_load_reg_386 == 3'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((sinkState_load_reg_386 == 3'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        lbTxDataOut_V_last_V_1_data_in = header_last_V;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1))) begin
        lbTxDataOut_V_last_V_1_data_in = rxGalapagosBridge_TLAST;
    end else begin
        lbTxDataOut_V_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((lbTxDataOut_V_last_V_1_sel == 1'b1)) begin
        lbTxDataOut_V_last_V_1_data_out = lbTxDataOut_V_last_V_1_payload_B;
    end else begin
        lbTxDataOut_V_last_V_1_data_out = lbTxDataOut_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd5) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op29_write_state2 == 1'b1)))) begin
        lbTxDataOut_V_last_V_1_vld_in = 1'b1;
    end else begin
        lbTxDataOut_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        remote_ip_tx_V_ap_vld = 1'b1;
    end else begin
        remote_ip_tx_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op25_read_state2 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (grp_nbreadreq_fu_103_p5 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (sinkState == 3'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rxGalapagosBridge_TDATA_blk_n = rxGalapagosBridge_TVALID;
    end else begin
        rxGalapagosBridge_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op25_read_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1)))) begin
        rxGalapagosBridge_TREADY = 1'b1;
    end else begin
        rxGalapagosBridge_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tx_state_V_ap_vld = 1'b1;
    end else begin
        tx_state_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_fu_309_p2 = (counter_V + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((lbTxDataOut_V_last_V_1_state == 2'd1) | (lbTxDataOut_V_keep_V_1_state == 2'd1) | (lbTxDataOut_V_data_V_1_state == 2'd1) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_state == 2'd3)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | (lbTxDataOut_V_last_V_1_state == 2'd1) | (lbTxDataOut_V_keep_V_1_state == 2'd1) | (lbTxDataOut_V_data_V_1_state == 2'd1) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_state == 2'd3)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state3_io) | (lbTxDataOut_V_last_V_1_state == 2'd1) | (lbTxDataOut_V_keep_V_1_state == 2'd1) | (lbTxDataOut_V_data_V_1_state == 2'd1) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_state == 2'd3)))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((arp_status_V_empty_n == 1'b0) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op25_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((arp_status_V_empty_n == 1'b0) | (1'b1 == ap_block_state2_io) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op25_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((arp_status_V_empty_n == 1'b0) | (1'b1 == ap_block_state2_io) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op25_read_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((sinkState_load_reg_386 == 3'd4) & (lbTxDataOut_V_data_V_1_ack_in == 1'b0)) | ((sinkState_load_reg_386 == 3'd5) & (lbTxDataOut_V_data_V_1_ack_in == 1'b0)) | ((lbTxDataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op29_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((arp_status_V_empty_n == 1'b0) | ((rxGalapagosBridge_TVALID == 1'b0) & (ap_predicate_op25_read_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((sinkState_load_reg_386 == 3'd4) & (lbTxDataOut_V_data_V_1_ack_in == 1'b0)) | ((sinkState_load_reg_386 == 3'd5) & (lbTxDataOut_V_data_V_1_ack_in == 1'b0)) | ((lbTxDataOut_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op75_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((lbTxDataOut_V_last_V_1_state == 2'd1) | (lbTxDataOut_V_keep_V_1_state == 2'd1) | (lbTxDataOut_V_data_V_1_state == 2'd1) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_last_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_keep_V_1_state == 2'd3)) | ((lbTxDataOut_TREADY == 1'b0) & (lbTxDataOut_V_data_V_1_state == 2'd3)));
end

always @ (*) begin
    ap_condition_442 = ((tmp_reg_394 == 1'd1) & (sinkState_load_reg_386 == 3'd0) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_563 = ((1'b0 == ap_block_pp0_stage1_11001) & (sinkState_load_reg_386 == 3'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge126_i_reg_164 = 'bx;

always @ (*) begin
    ap_predicate_op10_read_state1 = ((grp_nbreadreq_fu_103_p5 == 1'd1) & (sinkState == 3'd0));
end

always @ (*) begin
    ap_predicate_op25_read_state2 = ((tmp_1_reg_390 == 1'd1) & (sinkState_load_reg_386 == 3'd6));
end

always @ (*) begin
    ap_predicate_op29_write_state2 = ((tmp_1_reg_390 == 1'd1) & (sinkState_load_reg_386 == 3'd6));
end

always @ (*) begin
    ap_predicate_op75_write_state3 = ((tmp_1_reg_390 == 1'd1) & (sinkState_load_reg_386 == 3'd6));
end

assign grp_nbreadreq_fu_103_p5 = rxGalapagosBridge_TVALID;

assign icmp_ln879_fu_277_p2 = ((arp_status_V_dout == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_360_p2 = ((ip_table_V_Dout_A == old_dest_ip_V) ? 1'b1 : 1'b0);

assign ip_table_V_Addr_A = ip_table_V_Addr_A_orig << 32'd2;

assign ip_table_V_Addr_A_orig = zext_ln544_fu_232_p1;

assign ip_table_V_Din_A = 32'd0;

assign ip_table_V_WEN_A = 4'd0;

assign lbTxDataOut_TDATA = lbTxDataOut_V_data_V_1_data_out;

assign lbTxDataOut_TKEEP = lbTxDataOut_V_keep_V_1_data_out;

assign lbTxDataOut_TLAST = lbTxDataOut_V_last_V_1_data_out;

assign lbTxDataOut_TVALID = lbTxDataOut_V_last_V_1_state[1'd0];

assign lbTxDataOut_V_data_V_1_ack_in = lbTxDataOut_V_data_V_1_state[1'd1];

assign lbTxDataOut_V_data_V_1_ack_out = lbTxDataOut_TREADY;

assign lbTxDataOut_V_data_V_1_load_A = (lbTxDataOut_V_data_V_1_state_cmp_full & ~lbTxDataOut_V_data_V_1_sel_wr);

assign lbTxDataOut_V_data_V_1_load_B = (lbTxDataOut_V_data_V_1_state_cmp_full & lbTxDataOut_V_data_V_1_sel_wr);

assign lbTxDataOut_V_data_V_1_sel = lbTxDataOut_V_data_V_1_sel_rd;

assign lbTxDataOut_V_data_V_1_state_cmp_full = ((lbTxDataOut_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign lbTxDataOut_V_data_V_1_vld_out = lbTxDataOut_V_data_V_1_state[1'd0];

assign lbTxDataOut_V_keep_V_1_ack_in = lbTxDataOut_V_keep_V_1_state[1'd1];

assign lbTxDataOut_V_keep_V_1_ack_out = lbTxDataOut_TREADY;

assign lbTxDataOut_V_keep_V_1_load_A = (lbTxDataOut_V_keep_V_1_state_cmp_full & ~lbTxDataOut_V_keep_V_1_sel_wr);

assign lbTxDataOut_V_keep_V_1_load_B = (lbTxDataOut_V_keep_V_1_state_cmp_full & lbTxDataOut_V_keep_V_1_sel_wr);

assign lbTxDataOut_V_keep_V_1_sel = lbTxDataOut_V_keep_V_1_sel_rd;

assign lbTxDataOut_V_keep_V_1_state_cmp_full = ((lbTxDataOut_V_keep_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign lbTxDataOut_V_keep_V_1_vld_out = lbTxDataOut_V_keep_V_1_state[1'd0];

assign lbTxDataOut_V_last_V_1_ack_in = lbTxDataOut_V_last_V_1_state[1'd1];

assign lbTxDataOut_V_last_V_1_ack_out = lbTxDataOut_TREADY;

assign lbTxDataOut_V_last_V_1_load_A = (lbTxDataOut_V_last_V_1_state_cmp_full & ~lbTxDataOut_V_last_V_1_sel_wr);

assign lbTxDataOut_V_last_V_1_load_B = (lbTxDataOut_V_last_V_1_state_cmp_full & lbTxDataOut_V_last_V_1_sel_wr);

assign lbTxDataOut_V_last_V_1_sel = lbTxDataOut_V_last_V_1_sel_rd;

assign lbTxDataOut_V_last_V_1_state_cmp_full = ((lbTxDataOut_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign lbTxDataOut_V_last_V_1_vld_out = lbTxDataOut_V_last_V_1_state[1'd0];

assign remote_ip_tx_V = dest_ip_addr_V;

assign ret_V_fu_224_p3 = {{tmp_2_fu_214_p4}, {2'd0}};

assign select_ln129_fu_372_p3 = ((tmp_last_V_1_reg_398[0:0] === 1'b1) ? 3'd4 : 3'd5);

assign select_ln151_fu_283_p3 = ((header_last_V[0:0] === 1'b1) ? 3'd4 : 3'd5);

assign select_ln180_fu_257_p3 = ((rxGalapagosBridge_TLAST[0:0] === 1'b1) ? 3'd0 : 3'd6);

assign sinkState_load_load_fu_205_p1 = sinkState;

assign tmp_2_fu_214_p4 = {{rxGalapagosBridge_TDATA[31:24]}};

assign tmp_3_fu_301_p3 = counter_V[32'd2];

assign tx_state_V = sinkState;

assign zext_ln544_fu_232_p1 = ret_V_fu_224_p3;

endmodule //txPath

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity txPath is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    arp_status_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    arp_status_V_empty_n : IN STD_LOGIC;
    arp_status_V_read : OUT STD_LOGIC;
    rxGalapagosBridge_TVALID : IN STD_LOGIC;
    lbTxDataOut_TREADY : IN STD_LOGIC;
    rxGalapagosBridge_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    rxGalapagosBridge_TREADY : OUT STD_LOGIC;
    rxGalapagosBridge_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    rxGalapagosBridge_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    lbTxDataOut_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    lbTxDataOut_TVALID : OUT STD_LOGIC;
    lbTxDataOut_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    lbTxDataOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    remote_ip_tx_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    remote_ip_tx_V_ap_vld : OUT STD_LOGIC;
    tx_state_V : OUT STD_LOGIC_VECTOR (3 downto 0);
    tx_state_V_ap_vld : OUT STD_LOGIC;
    ip_table_V_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    ip_table_V_EN_A : OUT STD_LOGIC;
    ip_table_V_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    ip_table_V_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    ip_table_V_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of txPath is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal sinkState_load_reg_386 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op25_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal lbTxDataOut_V_data_V_1_ack_in : STD_LOGIC;
    signal ap_predicate_op29_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal lbTxDataOut_V_data_V_1_data_in : STD_LOGIC_VECTOR (511 downto 0);
    signal lbTxDataOut_V_data_V_1_data_out : STD_LOGIC_VECTOR (511 downto 0);
    signal lbTxDataOut_V_data_V_1_vld_in : STD_LOGIC;
    signal lbTxDataOut_V_data_V_1_vld_out : STD_LOGIC;
    signal lbTxDataOut_V_data_V_1_ack_out : STD_LOGIC;
    signal lbTxDataOut_V_data_V_1_payload_A : STD_LOGIC_VECTOR (511 downto 0);
    signal lbTxDataOut_V_data_V_1_payload_B : STD_LOGIC_VECTOR (511 downto 0);
    signal lbTxDataOut_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal lbTxDataOut_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal lbTxDataOut_V_data_V_1_sel : STD_LOGIC;
    signal lbTxDataOut_V_data_V_1_load_A : STD_LOGIC;
    signal lbTxDataOut_V_data_V_1_load_B : STD_LOGIC;
    signal lbTxDataOut_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal lbTxDataOut_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_data_in : STD_LOGIC_VECTOR (15 downto 0);
    signal lbTxDataOut_V_keep_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal lbTxDataOut_V_keep_V_1_vld_in : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_vld_out : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_ack_in : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_ack_out : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal lbTxDataOut_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal lbTxDataOut_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal lbTxDataOut_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal lbTxDataOut_V_keep_V_1_sel : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_load_A : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_load_B : STD_LOGIC;
    signal lbTxDataOut_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal lbTxDataOut_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal lbTxDataOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal lbTxDataOut_V_last_V_1_vld_in : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_vld_out : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_ack_in : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_ack_out : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal lbTxDataOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal lbTxDataOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal lbTxDataOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal lbTxDataOut_V_last_V_1_sel : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_load_A : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_load_B : STD_LOGIC;
    signal lbTxDataOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal lbTxDataOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal dest_ip_addr_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sinkState : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal header_data_V : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal header_keep_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal header_last_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal old_dest_ip_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal counter_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal rxGalapagosBridge_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal sinkState_load_load_fu_205_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_nbreadreq_fu_103_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal lbTxDataOut_TDATA_blk_n : STD_LOGIC;
    signal arp_status_V_blk_n : STD_LOGIC;
    signal reg_195 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_predicate_op10_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op75_write_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_200 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_1_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_301_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_storemerge126_i_phi_fu_167_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln129_fu_372_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge126_i_reg_164 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln883_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln544_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln180_fu_257_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln151_fu_283_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln700_fu_309_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ip_table_V_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_214_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_fu_224_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_442 : BOOLEAN;
    signal ap_condition_563 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((lbTxDataOut_V_data_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        lbTxDataOut_V_data_V_1_sel_rd <= not(lbTxDataOut_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_1))) then 
                                        lbTxDataOut_V_data_V_1_sel_wr <= not(lbTxDataOut_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_2)) or ((lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)))) then 
                    lbTxDataOut_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)))) then 
                    lbTxDataOut_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_ack_out = ap_const_logic_1))) and not(((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_1))) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_V_data_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1)) or ((lbTxDataOut_V_data_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_2)))) then 
                    lbTxDataOut_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    lbTxDataOut_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((lbTxDataOut_V_keep_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        lbTxDataOut_V_keep_V_1_sel_rd <= not(lbTxDataOut_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((lbTxDataOut_V_keep_V_1_ack_in = ap_const_logic_1) and (lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        lbTxDataOut_V_keep_V_1_sel_wr <= not(lbTxDataOut_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_2)) or ((lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    lbTxDataOut_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    lbTxDataOut_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_1))) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_V_keep_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1)) or ((lbTxDataOut_V_keep_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_2)))) then 
                    lbTxDataOut_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    lbTxDataOut_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((lbTxDataOut_V_last_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        lbTxDataOut_V_last_V_1_sel_rd <= not(lbTxDataOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((lbTxDataOut_V_last_V_1_ack_in = ap_const_logic_1) and (lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        lbTxDataOut_V_last_V_1_sel_wr <= not(lbTxDataOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    lbTxDataOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                lbTxDataOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_2)) or ((lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)))) then 
                    lbTxDataOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_1)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)))) then 
                    lbTxDataOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_ack_out = ap_const_logic_1))) and not(((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_1))) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_V_last_V_1_ack_out = ap_const_logic_1) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_1)) or ((lbTxDataOut_V_last_V_1_vld_in = ap_const_logic_1) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_2)))) then 
                    lbTxDataOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    lbTxDataOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    counter_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_563)) then
                if ((tmp_3_fu_301_p3 = ap_const_lv1_1)) then 
                    counter_V <= ap_const_lv3_0;
                elsif ((tmp_3_fu_301_p3 = ap_const_lv1_0)) then 
                    counter_V <= add_ln700_fu_309_p2;
                end if;
            end if; 
        end if;
    end process;

    sinkState_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_reg_394 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                sinkState <= ap_phi_mux_storemerge126_i_phi_fu_167_p4;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_3_fu_301_p3 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                sinkState <= ap_const_lv3_2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln879_fu_277_p2 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                sinkState <= select_ln151_fu_283_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((sinkState_load_reg_386 = ap_const_lv3_3) or (sinkState_load_reg_386 = ap_const_lv3_7))) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                sinkState <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                sinkState <= ap_const_lv3_6;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_1_reg_390 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                sinkState <= select_ln180_fu_257_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_reg_394 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                dest_ip_addr_V <= ip_table_V_Dout_A;
                header_data_V <= reg_195;
                header_keep_V <= reg_200;
                header_last_V <= tmp_last_V_1_reg_398;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lbTxDataOut_V_data_V_1_load_A = ap_const_logic_1)) then
                lbTxDataOut_V_data_V_1_payload_A <= lbTxDataOut_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lbTxDataOut_V_data_V_1_load_B = ap_const_logic_1)) then
                lbTxDataOut_V_data_V_1_payload_B <= lbTxDataOut_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lbTxDataOut_V_keep_V_1_load_A = ap_const_logic_1)) then
                lbTxDataOut_V_keep_V_1_payload_A <= lbTxDataOut_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lbTxDataOut_V_keep_V_1_load_B = ap_const_logic_1)) then
                lbTxDataOut_V_keep_V_1_payload_B <= lbTxDataOut_V_keep_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lbTxDataOut_V_last_V_1_load_A = ap_const_logic_1)) then
                lbTxDataOut_V_last_V_1_payload_A <= lbTxDataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((lbTxDataOut_V_last_V_1_load_B = ap_const_logic_1)) then
                lbTxDataOut_V_last_V_1_payload_B <= lbTxDataOut_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_reg_394 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln883_fu_360_p2 = ap_const_lv1_0))) then
                old_dest_ip_V <= ip_table_V_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_1_reg_390 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((grp_nbreadreq_fu_103_p5 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sinkState = ap_const_lv3_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_195 <= rxGalapagosBridge_TDATA;
                reg_200 <= rxGalapagosBridge_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sinkState_load_reg_386 <= sinkState;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sinkState_load_load_fu_205_p1 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1_reg_390 <= grp_nbreadreq_fu_103_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_nbreadreq_fu_103_p5 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sinkState = ap_const_lv3_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_last_V_1_reg_398 <= rxGalapagosBridge_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sinkState = ap_const_lv3_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_394 <= grp_nbreadreq_fu_103_p5;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln700_fu_309_p2 <= std_logic_vector(unsigned(counter_V) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, rxGalapagosBridge_TVALID, lbTxDataOut_TREADY, lbTxDataOut_V_data_V_1_state, lbTxDataOut_V_keep_V_1_state, lbTxDataOut_V_last_V_1_state, ap_predicate_op10_read_state1)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((lbTxDataOut_V_last_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, rxGalapagosBridge_TVALID, lbTxDataOut_TREADY, lbTxDataOut_V_data_V_1_state, lbTxDataOut_V_keep_V_1_state, lbTxDataOut_V_last_V_1_state, ap_predicate_op10_read_state1, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (lbTxDataOut_V_last_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, rxGalapagosBridge_TVALID, lbTxDataOut_TREADY, lbTxDataOut_V_data_V_1_state, lbTxDataOut_V_keep_V_1_state, lbTxDataOut_V_last_V_1_state, ap_predicate_op10_read_state1, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (lbTxDataOut_V_last_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter0, arp_status_V_empty_n, rxGalapagosBridge_TVALID, ap_predicate_op25_read_state2)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((arp_status_V_empty_n = ap_const_logic_0) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op25_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter0, arp_status_V_empty_n, rxGalapagosBridge_TVALID, ap_predicate_op25_read_state2, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((arp_status_V_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op25_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter0, arp_status_V_empty_n, rxGalapagosBridge_TVALID, ap_predicate_op25_read_state2, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((arp_status_V_empty_n = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op25_read_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg, rxGalapagosBridge_TVALID, ap_predicate_op10_read_state1)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state2_io_assign_proc : process(sinkState_load_reg_386, lbTxDataOut_V_data_V_1_ack_in, ap_predicate_op29_write_state2)
    begin
                ap_block_state2_io <= (((sinkState_load_reg_386 = ap_const_lv3_4) and (lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_0)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_0)) or ((lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(arp_status_V_empty_n, rxGalapagosBridge_TVALID, ap_predicate_op25_read_state2)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((arp_status_V_empty_n = ap_const_logic_0) or ((rxGalapagosBridge_TVALID = ap_const_logic_0) and (ap_predicate_op25_read_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(sinkState_load_reg_386, lbTxDataOut_V_data_V_1_ack_in, ap_predicate_op75_write_state3)
    begin
                ap_block_state3_io <= (((sinkState_load_reg_386 = ap_const_lv3_4) and (lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_0)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_0)) or ((lbTxDataOut_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op75_write_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(lbTxDataOut_TREADY, lbTxDataOut_V_data_V_1_state, lbTxDataOut_V_keep_V_1_state, lbTxDataOut_V_last_V_1_state)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((lbTxDataOut_V_last_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1) or (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_last_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_3)) or ((lbTxDataOut_TREADY = ap_const_logic_0) and (lbTxDataOut_V_data_V_1_state = ap_const_lv2_3)));
    end process;


    ap_condition_442_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_block_pp0_stage1, tmp_reg_394)
    begin
                ap_condition_442 <= ((tmp_reg_394 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_563_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_block_pp0_stage1_11001)
    begin
                ap_condition_563 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge126_i_phi_fu_167_p4_assign_proc : process(select_ln129_fu_372_p3, ap_phi_reg_pp0_iter0_storemerge126_i_reg_164, icmp_ln883_fu_360_p2, ap_condition_442)
    begin
        if ((ap_const_boolean_1 = ap_condition_442)) then
            if ((icmp_ln883_fu_360_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge126_i_phi_fu_167_p4 <= ap_const_lv3_1;
            elsif ((icmp_ln883_fu_360_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge126_i_phi_fu_167_p4 <= select_ln129_fu_372_p3;
            else 
                ap_phi_mux_storemerge126_i_phi_fu_167_p4 <= ap_phi_reg_pp0_iter0_storemerge126_i_reg_164;
            end if;
        else 
            ap_phi_mux_storemerge126_i_phi_fu_167_p4 <= ap_phi_reg_pp0_iter0_storemerge126_i_reg_164;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge126_i_reg_164 <= "XXX";

    ap_predicate_op10_read_state1_assign_proc : process(sinkState, grp_nbreadreq_fu_103_p5)
    begin
                ap_predicate_op10_read_state1 <= ((grp_nbreadreq_fu_103_p5 = ap_const_lv1_1) and (sinkState = ap_const_lv3_0));
    end process;


    ap_predicate_op25_read_state2_assign_proc : process(sinkState_load_reg_386, tmp_1_reg_390)
    begin
                ap_predicate_op25_read_state2 <= ((tmp_1_reg_390 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_6));
    end process;


    ap_predicate_op29_write_state2_assign_proc : process(sinkState_load_reg_386, tmp_1_reg_390)
    begin
                ap_predicate_op29_write_state2 <= ((tmp_1_reg_390 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_6));
    end process;


    ap_predicate_op75_write_state3_assign_proc : process(sinkState_load_reg_386, tmp_1_reg_390)
    begin
                ap_predicate_op75_write_state3 <= ((tmp_1_reg_390 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_6));
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    arp_status_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, arp_status_V_empty_n, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            arp_status_V_blk_n <= arp_status_V_empty_n;
        else 
            arp_status_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    arp_status_V_read_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            arp_status_V_read <= ap_const_logic_1;
        else 
            arp_status_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_nbreadreq_fu_103_p5 <= (0=>(rxGalapagosBridge_TVALID), others=>'-');
    icmp_ln879_fu_277_p2 <= "1" when (arp_status_V_dout = ap_const_lv2_0) else "0";
    icmp_ln883_fu_360_p2 <= "1" when (ip_table_V_Dout_A = old_dest_ip_V) else "0";
    ip_table_V_Addr_A <= std_logic_vector(shift_left(unsigned(ip_table_V_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    ip_table_V_Addr_A_orig <= zext_ln544_fu_232_p1(32 - 1 downto 0);
    ip_table_V_Din_A <= ap_const_lv32_0;

    ip_table_V_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ip_table_V_EN_A <= ap_const_logic_1;
        else 
            ip_table_V_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    ip_table_V_WEN_A <= ap_const_lv4_0;
    lbTxDataOut_TDATA <= lbTxDataOut_V_data_V_1_data_out;

    lbTxDataOut_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, tmp_1_reg_390, ap_predicate_op29_write_state2, lbTxDataOut_V_data_V_1_state, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((((sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)) or ((sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_1_reg_390 = ap_const_lv1_1) and (sinkState_load_reg_386 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lbTxDataOut_TDATA_blk_n <= lbTxDataOut_V_data_V_1_state(1);
        else 
            lbTxDataOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lbTxDataOut_TKEEP <= lbTxDataOut_V_keep_V_1_data_out;
    lbTxDataOut_TLAST <= lbTxDataOut_V_last_V_1_data_out;
    lbTxDataOut_TVALID <= lbTxDataOut_V_last_V_1_state(0);
    lbTxDataOut_V_data_V_1_ack_in <= lbTxDataOut_V_data_V_1_state(1);
    lbTxDataOut_V_data_V_1_ack_out <= lbTxDataOut_TREADY;

    lbTxDataOut_V_data_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_predicate_op29_write_state2, rxGalapagosBridge_TDATA, header_data_V, ap_block_pp0_stage1_01001)
    begin
        if ((((sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            lbTxDataOut_V_data_V_1_data_in <= header_data_V;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1))) then 
            lbTxDataOut_V_data_V_1_data_in <= rxGalapagosBridge_TDATA;
        else 
            lbTxDataOut_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    lbTxDataOut_V_data_V_1_data_out_assign_proc : process(lbTxDataOut_V_data_V_1_payload_A, lbTxDataOut_V_data_V_1_payload_B, lbTxDataOut_V_data_V_1_sel)
    begin
        if ((lbTxDataOut_V_data_V_1_sel = ap_const_logic_1)) then 
            lbTxDataOut_V_data_V_1_data_out <= lbTxDataOut_V_data_V_1_payload_B;
        else 
            lbTxDataOut_V_data_V_1_data_out <= lbTxDataOut_V_data_V_1_payload_A;
        end if; 
    end process;

    lbTxDataOut_V_data_V_1_load_A <= (lbTxDataOut_V_data_V_1_state_cmp_full and not(lbTxDataOut_V_data_V_1_sel_wr));
    lbTxDataOut_V_data_V_1_load_B <= (lbTxDataOut_V_data_V_1_state_cmp_full and lbTxDataOut_V_data_V_1_sel_wr);
    lbTxDataOut_V_data_V_1_sel <= lbTxDataOut_V_data_V_1_sel_rd;
    lbTxDataOut_V_data_V_1_state_cmp_full <= '0' when (lbTxDataOut_V_data_V_1_state = ap_const_lv2_1) else '1';

    lbTxDataOut_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_predicate_op29_write_state2, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)))) then 
            lbTxDataOut_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            lbTxDataOut_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    lbTxDataOut_V_data_V_1_vld_out <= lbTxDataOut_V_data_V_1_state(0);
    lbTxDataOut_V_keep_V_1_ack_in <= lbTxDataOut_V_keep_V_1_state(1);
    lbTxDataOut_V_keep_V_1_ack_out <= lbTxDataOut_TREADY;

    lbTxDataOut_V_keep_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_predicate_op29_write_state2, rxGalapagosBridge_TKEEP, header_keep_V, ap_block_pp0_stage1_01001)
    begin
        if ((((sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            lbTxDataOut_V_keep_V_1_data_in <= header_keep_V;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1))) then 
            lbTxDataOut_V_keep_V_1_data_in <= rxGalapagosBridge_TKEEP;
        else 
            lbTxDataOut_V_keep_V_1_data_in <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    lbTxDataOut_V_keep_V_1_data_out_assign_proc : process(lbTxDataOut_V_keep_V_1_payload_A, lbTxDataOut_V_keep_V_1_payload_B, lbTxDataOut_V_keep_V_1_sel)
    begin
        if ((lbTxDataOut_V_keep_V_1_sel = ap_const_logic_1)) then 
            lbTxDataOut_V_keep_V_1_data_out <= lbTxDataOut_V_keep_V_1_payload_B;
        else 
            lbTxDataOut_V_keep_V_1_data_out <= lbTxDataOut_V_keep_V_1_payload_A;
        end if; 
    end process;

    lbTxDataOut_V_keep_V_1_load_A <= (lbTxDataOut_V_keep_V_1_state_cmp_full and not(lbTxDataOut_V_keep_V_1_sel_wr));
    lbTxDataOut_V_keep_V_1_load_B <= (lbTxDataOut_V_keep_V_1_state_cmp_full and lbTxDataOut_V_keep_V_1_sel_wr);
    lbTxDataOut_V_keep_V_1_sel <= lbTxDataOut_V_keep_V_1_sel_rd;
    lbTxDataOut_V_keep_V_1_state_cmp_full <= '0' when (lbTxDataOut_V_keep_V_1_state = ap_const_lv2_1) else '1';

    lbTxDataOut_V_keep_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_predicate_op29_write_state2, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)))) then 
            lbTxDataOut_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            lbTxDataOut_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    lbTxDataOut_V_keep_V_1_vld_out <= lbTxDataOut_V_keep_V_1_state(0);
    lbTxDataOut_V_last_V_1_ack_in <= lbTxDataOut_V_last_V_1_state(1);
    lbTxDataOut_V_last_V_1_ack_out <= lbTxDataOut_TREADY;

    lbTxDataOut_V_last_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_predicate_op29_write_state2, rxGalapagosBridge_TLAST, header_last_V, ap_block_pp0_stage1_01001)
    begin
        if ((((sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            lbTxDataOut_V_last_V_1_data_in <= header_last_V;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1))) then 
            lbTxDataOut_V_last_V_1_data_in <= rxGalapagosBridge_TLAST;
        else 
            lbTxDataOut_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    lbTxDataOut_V_last_V_1_data_out_assign_proc : process(lbTxDataOut_V_last_V_1_payload_A, lbTxDataOut_V_last_V_1_payload_B, lbTxDataOut_V_last_V_1_sel)
    begin
        if ((lbTxDataOut_V_last_V_1_sel = ap_const_logic_1)) then 
            lbTxDataOut_V_last_V_1_data_out <= lbTxDataOut_V_last_V_1_payload_B;
        else 
            lbTxDataOut_V_last_V_1_data_out <= lbTxDataOut_V_last_V_1_payload_A;
        end if; 
    end process;

    lbTxDataOut_V_last_V_1_load_A <= (lbTxDataOut_V_last_V_1_state_cmp_full and not(lbTxDataOut_V_last_V_1_sel_wr));
    lbTxDataOut_V_last_V_1_load_B <= (lbTxDataOut_V_last_V_1_state_cmp_full and lbTxDataOut_V_last_V_1_sel_wr);
    lbTxDataOut_V_last_V_1_sel <= lbTxDataOut_V_last_V_1_sel_rd;
    lbTxDataOut_V_last_V_1_state_cmp_full <= '0' when (lbTxDataOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    lbTxDataOut_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, sinkState_load_reg_386, ap_predicate_op29_write_state2, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (sinkState_load_reg_386 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op29_write_state2 = ap_const_boolean_1)))) then 
            lbTxDataOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            lbTxDataOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    lbTxDataOut_V_last_V_1_vld_out <= lbTxDataOut_V_last_V_1_state(0);
    remote_ip_tx_V <= dest_ip_addr_V;

    remote_ip_tx_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            remote_ip_tx_V_ap_vld <= ap_const_logic_1;
        else 
            remote_ip_tx_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_224_p3 <= (tmp_2_fu_214_p4 & ap_const_lv2_0);

    rxGalapagosBridge_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, rxGalapagosBridge_TVALID, ap_predicate_op25_read_state2, sinkState, ap_block_pp0_stage0, grp_nbreadreq_fu_103_p5, ap_block_pp0_stage1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op25_read_state2 = ap_const_boolean_1)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (grp_nbreadreq_fu_103_p5 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (sinkState = ap_const_lv3_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rxGalapagosBridge_TDATA_blk_n <= rxGalapagosBridge_TVALID;
        else 
            rxGalapagosBridge_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxGalapagosBridge_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_predicate_op25_read_state2, ap_block_pp0_stage1_11001, ap_predicate_op10_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op25_read_state2 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op10_read_state1 = ap_const_boolean_1)))) then 
            rxGalapagosBridge_TREADY <= ap_const_logic_1;
        else 
            rxGalapagosBridge_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    select_ln129_fu_372_p3 <= 
        ap_const_lv3_4 when (tmp_last_V_1_reg_398(0) = '1') else 
        ap_const_lv3_5;
    select_ln151_fu_283_p3 <= 
        ap_const_lv3_4 when (header_last_V(0) = '1') else 
        ap_const_lv3_5;
    select_ln180_fu_257_p3 <= 
        ap_const_lv3_0 when (rxGalapagosBridge_TLAST(0) = '1') else 
        ap_const_lv3_6;
    sinkState_load_load_fu_205_p1 <= sinkState;
    tmp_2_fu_214_p4 <= rxGalapagosBridge_TDATA(31 downto 24);
    tmp_3_fu_301_p3 <= counter_V(2 downto 2);
    tx_state_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sinkState),4));

    tx_state_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx_state_V_ap_vld <= ap_const_logic_1;
        else 
            tx_state_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln544_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_224_p3),64));
end behav;

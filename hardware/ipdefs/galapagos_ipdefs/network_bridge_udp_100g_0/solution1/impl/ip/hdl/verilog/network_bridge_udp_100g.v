// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="network_bridge_udp_100g,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=3.103000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.715125,HLS_SYN_LAT=3,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3860,HLS_SYN_LUT=627,HLS_VERSION=2019_1}" *)

module network_bridge_udp_100g (
        rxGalapagosBridge_TDATA,
        rxGalapagosBridge_TKEEP,
        rxGalapagosBridge_TLAST,
        lbRxDataIn_TDATA,
        lbRxDataIn_TKEEP,
        lbRxDataIn_TLAST,
        lbTxDataOut_TDATA,
        lbTxDataOut_TKEEP,
        lbTxDataOut_TLAST,
        txGalapagosBridge_TDATA,
        txGalapagosBridge_TKEEP,
        txGalapagosBridge_TLAST,
        remote_ip_tx_V,
        tx_state_V,
        arp_status_V,
        ip_table_V_Addr_A,
        ip_table_V_EN_A,
        ip_table_V_Din_A,
        ip_table_V_Dout_A,
        ip_table_V_WEN_A,
        ip_table_V_Clk_A,
        ap_clk,
        ip_table_V_Rst_A,
        ap_rst_n,
        ip_table_V_Addr_B,
        ip_table_V_EN_B,
        ip_table_V_Din_B,
        ip_table_V_Dout_B,
        ip_table_V_WEN_B,
        ip_table_V_Clk_B,
        ip_table_V_Rst_B,
        id_V,
        dest_V,
        size_V,
        lbRxDataIn_TVALID,
        lbRxDataIn_TREADY,
        txGalapagosBridge_TVALID,
        txGalapagosBridge_TREADY,
        id_V_ap_vld,
        dest_V_ap_vld,
        size_V_ap_vld,
        rxGalapagosBridge_TVALID,
        rxGalapagosBridge_TREADY,
        lbTxDataOut_TVALID,
        lbTxDataOut_TREADY,
        tx_state_V_ap_vld
);


input  [511:0] rxGalapagosBridge_TDATA;
input  [15:0] rxGalapagosBridge_TKEEP;
input  [0:0] rxGalapagosBridge_TLAST;
input  [511:0] lbRxDataIn_TDATA;
input  [15:0] lbRxDataIn_TKEEP;
input  [0:0] lbRxDataIn_TLAST;
output  [511:0] lbTxDataOut_TDATA;
output  [15:0] lbTxDataOut_TKEEP;
output  [0:0] lbTxDataOut_TLAST;
output  [511:0] txGalapagosBridge_TDATA;
output  [15:0] txGalapagosBridge_TKEEP;
output  [0:0] txGalapagosBridge_TLAST;
output  [31:0] remote_ip_tx_V;
output  [3:0] tx_state_V;
input  [1:0] arp_status_V;
output  [31:0] ip_table_V_Addr_A;
output   ip_table_V_EN_A;
output  [31:0] ip_table_V_Din_A;
input  [31:0] ip_table_V_Dout_A;
output  [3:0] ip_table_V_WEN_A;
output   ip_table_V_Clk_A;
input   ap_clk;
output   ip_table_V_Rst_A;
input   ap_rst_n;
output  [31:0] ip_table_V_Addr_B;
output   ip_table_V_EN_B;
output  [31:0] ip_table_V_Din_B;
input  [31:0] ip_table_V_Dout_B;
output  [3:0] ip_table_V_WEN_B;
output   ip_table_V_Clk_B;
output   ip_table_V_Rst_B;
output  [7:0] id_V;
output  [7:0] dest_V;
output  [15:0] size_V;
input   lbRxDataIn_TVALID;
output   lbRxDataIn_TREADY;
output   txGalapagosBridge_TVALID;
input   txGalapagosBridge_TREADY;
output   id_V_ap_vld;
output   dest_V_ap_vld;
output   size_V_ap_vld;
input   rxGalapagosBridge_TVALID;
output   rxGalapagosBridge_TREADY;
output   lbTxDataOut_TVALID;
input   lbTxDataOut_TREADY;
output   tx_state_V_ap_vld;

 reg    ap_rst_n_inv;
wire    network_bridge_udp_1_2_U0_ap_start;
wire    network_bridge_udp_1_2_U0_ap_done;
wire    network_bridge_udp_1_2_U0_ap_continue;
wire    network_bridge_udp_1_2_U0_ap_idle;
wire    network_bridge_udp_1_2_U0_ap_ready;
wire    network_bridge_udp_1_2_U0_start_out;
wire    network_bridge_udp_1_2_U0_start_write;
wire   [1:0] network_bridge_udp_1_2_U0_arp_status_V_out_din;
wire    network_bridge_udp_1_2_U0_arp_status_V_out_write;
wire    network_bridge_udp_1_1_U0_ap_start;
wire    network_bridge_udp_1_1_U0_ap_done;
wire    network_bridge_udp_1_1_U0_ap_continue;
wire    network_bridge_udp_1_1_U0_ap_idle;
wire    network_bridge_udp_1_1_U0_ap_ready;
wire    network_bridge_udp_1_1_U0_arp_status_V_read;
wire   [1:0] network_bridge_udp_1_1_U0_arp_status_V_out_din;
wire    network_bridge_udp_1_1_U0_arp_status_V_out_write;
wire    rxPath_U0_ap_start;
wire    rxPath_U0_ap_done;
wire    rxPath_U0_ap_continue;
wire    rxPath_U0_ap_idle;
wire    rxPath_U0_ap_ready;
wire    rxPath_U0_lbRxDataIn_TREADY;
wire   [511:0] rxPath_U0_txGalapagosBridge_TDATA;
wire    rxPath_U0_txGalapagosBridge_TVALID;
wire   [15:0] rxPath_U0_txGalapagosBridge_TKEEP;
wire   [0:0] rxPath_U0_txGalapagosBridge_TLAST;
wire   [7:0] rxPath_U0_id_V;
wire    rxPath_U0_id_V_ap_vld;
wire   [7:0] rxPath_U0_dest_V;
wire    rxPath_U0_dest_V_ap_vld;
wire   [15:0] rxPath_U0_size_V;
wire    rxPath_U0_size_V_ap_vld;
wire    ap_sync_continue;
wire    txPath_U0_ap_start;
wire    txPath_U0_ap_done;
wire    txPath_U0_ap_continue;
wire    txPath_U0_ap_idle;
wire    txPath_U0_ap_ready;
wire    txPath_U0_arp_status_V_read;
wire    txPath_U0_rxGalapagosBridge_TREADY;
wire   [511:0] txPath_U0_lbTxDataOut_TDATA;
wire    txPath_U0_lbTxDataOut_TVALID;
wire   [15:0] txPath_U0_lbTxDataOut_TKEEP;
wire   [0:0] txPath_U0_lbTxDataOut_TLAST;
wire   [31:0] txPath_U0_remote_ip_tx_V;
wire    txPath_U0_remote_ip_tx_V_ap_vld;
wire   [3:0] txPath_U0_tx_state_V;
wire    txPath_U0_tx_state_V_ap_vld;
wire   [31:0] txPath_U0_ip_table_V_Addr_A;
wire    txPath_U0_ip_table_V_EN_A;
wire   [3:0] txPath_U0_ip_table_V_WEN_A;
wire   [31:0] txPath_U0_ip_table_V_Din_A;
wire    arp_status_V_c1_full_n;
wire   [1:0] arp_status_V_c1_dout;
wire    arp_status_V_c1_empty_n;
wire    arp_status_V_c_full_n;
wire   [1:0] arp_status_V_c_dout;
wire    arp_status_V_c_empty_n;
wire   [0:0] start_for_network_bridge_udp_1_1_U0_din;
wire    start_for_network_bridge_udp_1_1_U0_full_n;
wire   [0:0] start_for_network_bridge_udp_1_1_U0_dout;
wire    start_for_network_bridge_udp_1_1_U0_empty_n;
wire    network_bridge_udp_1_1_U0_start_full_n;
wire    network_bridge_udp_1_1_U0_start_write;
wire    rxPath_U0_start_full_n;
wire    rxPath_U0_start_write;
wire    txPath_U0_start_full_n;
wire    txPath_U0_start_write;

network_bridge_udp_1_2 network_bridge_udp_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(network_bridge_udp_1_2_U0_ap_start),
    .start_full_n(start_for_network_bridge_udp_1_1_U0_full_n),
    .ap_done(network_bridge_udp_1_2_U0_ap_done),
    .ap_continue(network_bridge_udp_1_2_U0_ap_continue),
    .ap_idle(network_bridge_udp_1_2_U0_ap_idle),
    .ap_ready(network_bridge_udp_1_2_U0_ap_ready),
    .start_out(network_bridge_udp_1_2_U0_start_out),
    .start_write(network_bridge_udp_1_2_U0_start_write),
    .arp_status_V(arp_status_V),
    .arp_status_V_out_din(network_bridge_udp_1_2_U0_arp_status_V_out_din),
    .arp_status_V_out_full_n(arp_status_V_c1_full_n),
    .arp_status_V_out_write(network_bridge_udp_1_2_U0_arp_status_V_out_write)
);

network_bridge_udp_1_1 network_bridge_udp_1_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(network_bridge_udp_1_1_U0_ap_start),
    .ap_done(network_bridge_udp_1_1_U0_ap_done),
    .ap_continue(network_bridge_udp_1_1_U0_ap_continue),
    .ap_idle(network_bridge_udp_1_1_U0_ap_idle),
    .ap_ready(network_bridge_udp_1_1_U0_ap_ready),
    .arp_status_V_dout(arp_status_V_c1_dout),
    .arp_status_V_empty_n(arp_status_V_c1_empty_n),
    .arp_status_V_read(network_bridge_udp_1_1_U0_arp_status_V_read),
    .arp_status_V_out_din(network_bridge_udp_1_1_U0_arp_status_V_out_din),
    .arp_status_V_out_full_n(arp_status_V_c_full_n),
    .arp_status_V_out_write(network_bridge_udp_1_1_U0_arp_status_V_out_write)
);

rxPath rxPath_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rxPath_U0_ap_start),
    .ap_done(rxPath_U0_ap_done),
    .ap_continue(rxPath_U0_ap_continue),
    .ap_idle(rxPath_U0_ap_idle),
    .ap_ready(rxPath_U0_ap_ready),
    .lbRxDataIn_TVALID(lbRxDataIn_TVALID),
    .txGalapagosBridge_TREADY(txGalapagosBridge_TREADY),
    .lbRxDataIn_TDATA(lbRxDataIn_TDATA),
    .lbRxDataIn_TREADY(rxPath_U0_lbRxDataIn_TREADY),
    .lbRxDataIn_TKEEP(lbRxDataIn_TKEEP),
    .lbRxDataIn_TLAST(lbRxDataIn_TLAST),
    .txGalapagosBridge_TDATA(rxPath_U0_txGalapagosBridge_TDATA),
    .txGalapagosBridge_TVALID(rxPath_U0_txGalapagosBridge_TVALID),
    .txGalapagosBridge_TKEEP(rxPath_U0_txGalapagosBridge_TKEEP),
    .txGalapagosBridge_TLAST(rxPath_U0_txGalapagosBridge_TLAST),
    .id_V(rxPath_U0_id_V),
    .id_V_ap_vld(rxPath_U0_id_V_ap_vld),
    .dest_V(rxPath_U0_dest_V),
    .dest_V_ap_vld(rxPath_U0_dest_V_ap_vld),
    .size_V(rxPath_U0_size_V),
    .size_V_ap_vld(rxPath_U0_size_V_ap_vld)
);

txPath txPath_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(txPath_U0_ap_start),
    .ap_done(txPath_U0_ap_done),
    .ap_continue(txPath_U0_ap_continue),
    .ap_idle(txPath_U0_ap_idle),
    .ap_ready(txPath_U0_ap_ready),
    .arp_status_V_dout(arp_status_V_c_dout),
    .arp_status_V_empty_n(arp_status_V_c_empty_n),
    .arp_status_V_read(txPath_U0_arp_status_V_read),
    .rxGalapagosBridge_TVALID(rxGalapagosBridge_TVALID),
    .lbTxDataOut_TREADY(lbTxDataOut_TREADY),
    .rxGalapagosBridge_TDATA(rxGalapagosBridge_TDATA),
    .rxGalapagosBridge_TREADY(txPath_U0_rxGalapagosBridge_TREADY),
    .rxGalapagosBridge_TKEEP(rxGalapagosBridge_TKEEP),
    .rxGalapagosBridge_TLAST(rxGalapagosBridge_TLAST),
    .lbTxDataOut_TDATA(txPath_U0_lbTxDataOut_TDATA),
    .lbTxDataOut_TVALID(txPath_U0_lbTxDataOut_TVALID),
    .lbTxDataOut_TKEEP(txPath_U0_lbTxDataOut_TKEEP),
    .lbTxDataOut_TLAST(txPath_U0_lbTxDataOut_TLAST),
    .remote_ip_tx_V(txPath_U0_remote_ip_tx_V),
    .remote_ip_tx_V_ap_vld(txPath_U0_remote_ip_tx_V_ap_vld),
    .tx_state_V(txPath_U0_tx_state_V),
    .tx_state_V_ap_vld(txPath_U0_tx_state_V_ap_vld),
    .ip_table_V_Addr_A(txPath_U0_ip_table_V_Addr_A),
    .ip_table_V_EN_A(txPath_U0_ip_table_V_EN_A),
    .ip_table_V_WEN_A(txPath_U0_ip_table_V_WEN_A),
    .ip_table_V_Din_A(txPath_U0_ip_table_V_Din_A),
    .ip_table_V_Dout_A(ip_table_V_Dout_A)
);

fifo_w2_d2_A arp_status_V_c1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(network_bridge_udp_1_2_U0_arp_status_V_out_din),
    .if_full_n(arp_status_V_c1_full_n),
    .if_write(network_bridge_udp_1_2_U0_arp_status_V_out_write),
    .if_dout(arp_status_V_c1_dout),
    .if_empty_n(arp_status_V_c1_empty_n),
    .if_read(network_bridge_udp_1_1_U0_arp_status_V_read)
);

fifo_w2_d2_A arp_status_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(network_bridge_udp_1_1_U0_arp_status_V_out_din),
    .if_full_n(arp_status_V_c_full_n),
    .if_write(network_bridge_udp_1_1_U0_arp_status_V_out_write),
    .if_dout(arp_status_V_c_dout),
    .if_empty_n(arp_status_V_c_empty_n),
    .if_read(txPath_U0_arp_status_V_read)
);

start_for_network_bridge_udp_1_1_U0 start_for_network_bridge_udp_1_1_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_network_bridge_udp_1_1_U0_din),
    .if_full_n(start_for_network_bridge_udp_1_1_U0_full_n),
    .if_write(network_bridge_udp_1_2_U0_start_write),
    .if_dout(start_for_network_bridge_udp_1_1_U0_dout),
    .if_empty_n(start_for_network_bridge_udp_1_1_U0_empty_n),
    .if_read(network_bridge_udp_1_1_U0_ap_ready)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign dest_V = rxPath_U0_dest_V;

assign dest_V_ap_vld = rxPath_U0_dest_V_ap_vld;

assign id_V = rxPath_U0_id_V;

assign id_V_ap_vld = rxPath_U0_id_V_ap_vld;

assign ip_table_V_Addr_A = txPath_U0_ip_table_V_Addr_A;

assign ip_table_V_Addr_B = 32'd0;

assign ip_table_V_Clk_A = ap_clk;

assign ip_table_V_Clk_B = ap_clk;

assign ip_table_V_Din_A = 32'd0;

assign ip_table_V_Din_B = 32'd0;

assign ip_table_V_EN_A = txPath_U0_ip_table_V_EN_A;

assign ip_table_V_EN_B = 1'b0;

assign ip_table_V_Rst_A = ap_rst_n_inv;

assign ip_table_V_Rst_B = ap_rst_n_inv;

assign ip_table_V_WEN_A = 1'b0;

assign ip_table_V_WEN_B = 1'b0;

assign lbRxDataIn_TREADY = rxPath_U0_lbRxDataIn_TREADY;

assign lbTxDataOut_TDATA = txPath_U0_lbTxDataOut_TDATA;

assign lbTxDataOut_TKEEP = txPath_U0_lbTxDataOut_TKEEP;

assign lbTxDataOut_TLAST = txPath_U0_lbTxDataOut_TLAST;

assign lbTxDataOut_TVALID = txPath_U0_lbTxDataOut_TVALID;

assign network_bridge_udp_1_1_U0_ap_continue = 1'b1;

assign network_bridge_udp_1_1_U0_ap_start = start_for_network_bridge_udp_1_1_U0_empty_n;

assign network_bridge_udp_1_1_U0_start_full_n = 1'b1;

assign network_bridge_udp_1_1_U0_start_write = 1'b0;

assign network_bridge_udp_1_2_U0_ap_continue = 1'b1;

assign network_bridge_udp_1_2_U0_ap_start = 1'b1;

assign remote_ip_tx_V = txPath_U0_remote_ip_tx_V;

assign rxGalapagosBridge_TREADY = txPath_U0_rxGalapagosBridge_TREADY;

assign rxPath_U0_ap_continue = 1'b1;

assign rxPath_U0_ap_start = 1'b1;

assign rxPath_U0_start_full_n = 1'b1;

assign rxPath_U0_start_write = 1'b0;

assign size_V = rxPath_U0_size_V;

assign size_V_ap_vld = rxPath_U0_size_V_ap_vld;

assign start_for_network_bridge_udp_1_1_U0_din = 1'b1;

assign txGalapagosBridge_TDATA = rxPath_U0_txGalapagosBridge_TDATA;

assign txGalapagosBridge_TKEEP = rxPath_U0_txGalapagosBridge_TKEEP;

assign txGalapagosBridge_TLAST = rxPath_U0_txGalapagosBridge_TLAST;

assign txGalapagosBridge_TVALID = rxPath_U0_txGalapagosBridge_TVALID;

assign txPath_U0_ap_continue = 1'b1;

assign txPath_U0_ap_start = 1'b1;

assign txPath_U0_start_full_n = 1'b1;

assign txPath_U0_start_write = 1'b0;

assign tx_state_V = txPath_U0_tx_state_V;

assign tx_state_V_ap_vld = txPath_U0_tx_state_V_ap_vld;

endmodule //network_bridge_udp_100g

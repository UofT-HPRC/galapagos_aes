-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity GMI_data_width_64_512 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    in_r_TDEST : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TID : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_TUSER : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    out_r_TDEST : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_TUSER : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of GMI_data_width_64_512 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "GMI_data_width_64_512,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=108,HLS_SYN_LUT=41,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv448_lc_1 : STD_LOGIC_VECTOR (447 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv56_FFFFFFFFFFFFFF : STD_LOGIC_VECTOR (55 downto 0) := "11111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_nbreadreq_fu_60_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_reg_174 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_nbwritereq_fu_94_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_dest_V_reg_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_reg_183 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_reg_193 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_158_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_s_reg_198 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_1_fu_166_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_1_reg_203 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_op33_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (in_r_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    p_Result_1_reg_203(7 downto 0) <= p_Result_1_fu_166_p3(7 downto 0);
                    p_Result_s_reg_198(63 downto 0) <= p_Result_s_fu_158_p3(63 downto 0);
                tmp_dest_V_reg_178 <= in_r_TDEST;
                tmp_id_V_reg_188 <= in_r_TID;
                tmp_last_V_reg_183 <= in_r_TLAST;
                tmp_user_V_reg_193 <= in_r_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (in_r_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_174 <= tmp_nbreadreq_fu_60_p8;
            end if;
        end if;
    end process;
    p_Result_s_reg_198(511 downto 64) <= "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    p_Result_1_reg_203(63 downto 8) <= "11111111111111111111111111111111111111111111111111111111";

    ap_NS_fsm_assign_proc : process (in_r_TVALID, ap_CS_fsm, ap_CS_fsm_state1, tmp_nbreadreq_fu_60_p8, ap_CS_fsm_state2, tmp_reg_174, tmp_1_nbwritereq_fu_94_p8, ap_block_state2_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (in_r_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((tmp_reg_174 = ap_const_lv1_0) or (tmp_1_nbwritereq_fu_94_p8 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_boolean_0 = ap_block_state2_io) and (tmp_1_nbwritereq_fu_94_p8 = ap_const_lv1_0) and (tmp_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_state1_assign_proc : process(in_r_TVALID, tmp_nbreadreq_fu_60_p8)
    begin
                ap_block_state1 <= ((tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (in_r_TVALID = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(out_r_TREADY, ap_predicate_op33_write_state2)
    begin
                ap_block_state2_io <= ((out_r_TREADY = ap_const_logic_0) and (ap_predicate_op33_write_state2 = ap_const_boolean_1));
    end process;


    ap_predicate_op33_write_state2_assign_proc : process(tmp_reg_174, tmp_1_nbwritereq_fu_94_p8)
    begin
                ap_predicate_op33_write_state2 <= ((tmp_1_nbwritereq_fu_94_p8 = ap_const_lv1_1) and (tmp_reg_174 = ap_const_lv1_1));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    in_r_TDATA_blk_n_assign_proc : process(in_r_TVALID, ap_CS_fsm_state1, tmp_nbreadreq_fu_60_p8)
    begin
        if (((tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TDATA_blk_n <= in_r_TVALID;
        else 
            in_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_TREADY_assign_proc : process(in_r_TVALID, ap_CS_fsm_state1, tmp_nbreadreq_fu_60_p8)
    begin
        if ((not(((tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (in_r_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_60_p8 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_TREADY <= ap_const_logic_1;
        else 
            in_r_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    out_r_TDATA <= p_Result_s_reg_198;

    out_r_TDATA_blk_n_assign_proc : process(out_r_TREADY, ap_CS_fsm_state2, tmp_reg_174, tmp_1_nbwritereq_fu_94_p8)
    begin
        if (((tmp_1_nbwritereq_fu_94_p8 = ap_const_lv1_1) and (tmp_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_r_TDATA_blk_n <= out_r_TREADY;
        else 
            out_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_r_TDEST <= tmp_dest_V_reg_178;
    out_r_TID <= tmp_id_V_reg_188;
    out_r_TKEEP <= p_Result_1_reg_203;
    out_r_TLAST <= tmp_last_V_reg_183;
    out_r_TUSER <= tmp_user_V_reg_193;

    out_r_TVALID_assign_proc : process(ap_CS_fsm_state2, ap_predicate_op33_write_state2, ap_block_state2_io)
    begin
        if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_predicate_op33_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_r_TVALID <= ap_const_logic_1;
        else 
            out_r_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_166_p3 <= (ap_const_lv56_FFFFFFFFFFFFFF & in_r_TKEEP);
    p_Result_s_fu_158_p3 <= (ap_const_lv448_lc_1 & in_r_TDATA);
    tmp_1_nbwritereq_fu_94_p8 <= (0=>out_r_TREADY, others=>'-');
    tmp_nbreadreq_fu_60_p8 <= (0=>(in_r_TVALID), others=>'-');
end behav;

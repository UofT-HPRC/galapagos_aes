// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mul_bytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mul_bytes::ap_const_logic_1 = sc_dt::Log_1;
const bool mul_bytes::ap_const_boolean_1 = true;
const sc_lv<4> mul_bytes::ap_const_lv4_0 = "0000";
const sc_lv<5> mul_bytes::ap_const_lv5_1 = "1";
const sc_lv<32> mul_bytes::ap_const_lv32_1 = "1";
const sc_lv<5> mul_bytes::ap_const_lv5_0 = "00000";
const sc_lv<2> mul_bytes::ap_const_lv2_0 = "00";
const sc_lv<32> mul_bytes::ap_const_lv32_2 = "10";
const sc_lv<6> mul_bytes::ap_const_lv6_0 = "000000";
const sc_lv<3> mul_bytes::ap_const_lv3_0 = "000";
const sc_lv<32> mul_bytes::ap_const_lv32_3 = "11";
const sc_lv<7> mul_bytes::ap_const_lv7_0 = "0000000";
const sc_lv<32> mul_bytes::ap_const_lv32_4 = "100";
const sc_lv<8> mul_bytes::ap_const_lv8_0 = "00000000";
const sc_lv<8> mul_bytes::ap_const_lv8_1B = "11011";
const sc_lv<32> mul_bytes::ap_const_lv32_5 = "101";
const sc_lv<8> mul_bytes::ap_const_lv8_1 = "1";
const sc_lv<32> mul_bytes::ap_const_lv32_7 = "111";
const sc_lv<32> mul_bytes::ap_const_lv32_6 = "110";
const sc_logic mul_bytes::ap_const_logic_0 = sc_dt::Log_0;

mul_bytes::mul_bytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( xor_ln19_5_fu_360_p2 );
    sensitive << ( zext_ln19_3_fu_344_p1 );

    SC_METHOD(thread_or_ln719_fu_204_p2);
    sensitive << ( shl_ln841_4_fu_188_p3 );

    SC_METHOD(thread_select_ln19_1_fu_100_p3);
    sensitive << ( tmp_fu_92_p3 );
    sensitive << ( shl_ln841_fu_86_p2 );

    SC_METHOD(thread_select_ln19_2_fu_124_p3);
    sensitive << ( tmp_1_fu_116_p3 );
    sensitive << ( shl_ln841_1_fu_108_p3 );

    SC_METHOD(thread_select_ln19_3_fu_152_p3);
    sensitive << ( tmp_2_fu_144_p3 );
    sensitive << ( shl_ln841_2_fu_136_p3 );

    SC_METHOD(thread_select_ln19_4_fu_176_p3);
    sensitive << ( tmp_3_fu_168_p3 );
    sensitive << ( shl_ln841_3_fu_160_p3 );

    SC_METHOD(thread_select_ln19_5_fu_226_p3);
    sensitive << ( tmp_5_fu_218_p3 );
    sensitive << ( select_ln25_fu_210_p3 );

    SC_METHOD(thread_select_ln19_6_fu_270_p3);
    sensitive << ( tmp_7_fu_262_p3 );
    sensitive << ( select_ln25_1_fu_254_p3 );

    SC_METHOD(thread_select_ln19_7_fu_314_p3);
    sensitive << ( tmp_9_fu_306_p3 );
    sensitive << ( select_ln25_2_fu_298_p3 );

    SC_METHOD(thread_select_ln19_fu_74_p3);
    sensitive << ( trunc_ln19_fu_66_p1 );
    sensitive << ( trunc_ln19_1_fu_70_p1 );

    SC_METHOD(thread_select_ln25_1_fu_254_p3);
    sensitive << ( shl_ln841_5_fu_234_p2 );
    sensitive << ( tmp_6_fu_240_p3 );
    sensitive << ( xor_ln719_fu_248_p2 );

    SC_METHOD(thread_select_ln25_2_fu_298_p3);
    sensitive << ( shl_ln841_6_fu_278_p2 );
    sensitive << ( tmp_8_fu_284_p3 );
    sensitive << ( xor_ln719_1_fu_292_p2 );

    SC_METHOD(thread_select_ln25_fu_210_p3);
    sensitive << ( shl_ln841_4_fu_188_p3 );
    sensitive << ( tmp_4_fu_196_p3 );
    sensitive << ( or_ln719_fu_204_p2 );

    SC_METHOD(thread_shl_ln841_1_fu_108_p3);
    sensitive << ( trunc_ln19_1_fu_70_p1 );

    SC_METHOD(thread_shl_ln841_2_fu_136_p3);
    sensitive << ( trunc_ln19_1_fu_70_p1 );

    SC_METHOD(thread_shl_ln841_3_fu_160_p3);
    sensitive << ( trunc_ln19_1_fu_70_p1 );

    SC_METHOD(thread_shl_ln841_4_fu_188_p3);
    sensitive << ( trunc_ln841_fu_184_p1 );

    SC_METHOD(thread_shl_ln841_5_fu_234_p2);
    sensitive << ( select_ln25_fu_210_p3 );

    SC_METHOD(thread_shl_ln841_6_fu_278_p2);
    sensitive << ( select_ln25_1_fu_254_p3 );

    SC_METHOD(thread_shl_ln841_fu_86_p2);
    sensitive << ( a_V );

    SC_METHOD(thread_tmp_1_fu_116_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_tmp_2_fu_144_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_tmp_3_fu_168_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_tmp_4_fu_196_p3);
    sensitive << ( a_V );

    SC_METHOD(thread_tmp_5_fu_218_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_tmp_6_fu_240_p3);
    sensitive << ( select_ln25_fu_210_p3 );

    SC_METHOD(thread_tmp_7_fu_262_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_tmp_8_fu_284_p3);
    sensitive << ( select_ln25_1_fu_254_p3 );

    SC_METHOD(thread_tmp_9_fu_306_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_tmp_fu_92_p3);
    sensitive << ( b_V );

    SC_METHOD(thread_trunc_ln19_1_fu_70_p1);
    sensitive << ( a_V );

    SC_METHOD(thread_trunc_ln19_fu_66_p1);
    sensitive << ( b_V );

    SC_METHOD(thread_trunc_ln841_fu_184_p1);
    sensitive << ( a_V );

    SC_METHOD(thread_xor_ln19_1_fu_332_p2);
    sensitive << ( zext_ln19_1_fu_132_p1 );
    sensitive << ( select_ln19_3_fu_152_p3 );

    SC_METHOD(thread_xor_ln19_2_fu_338_p2);
    sensitive << ( xor_ln19_1_fu_332_p2 );
    sensitive << ( zext_ln19_2_fu_328_p1 );

    SC_METHOD(thread_xor_ln19_3_fu_348_p2);
    sensitive << ( select_ln19_4_fu_176_p3 );
    sensitive << ( select_ln19_5_fu_226_p3 );

    SC_METHOD(thread_xor_ln19_4_fu_354_p2);
    sensitive << ( select_ln19_6_fu_270_p3 );
    sensitive << ( select_ln19_7_fu_314_p3 );

    SC_METHOD(thread_xor_ln19_5_fu_360_p2);
    sensitive << ( xor_ln19_4_fu_354_p2 );
    sensitive << ( xor_ln19_3_fu_348_p2 );

    SC_METHOD(thread_xor_ln19_fu_322_p2);
    sensitive << ( zext_ln19_fu_82_p1 );
    sensitive << ( select_ln19_1_fu_100_p3 );

    SC_METHOD(thread_xor_ln719_1_fu_292_p2);
    sensitive << ( shl_ln841_6_fu_278_p2 );

    SC_METHOD(thread_xor_ln719_fu_248_p2);
    sensitive << ( shl_ln841_5_fu_234_p2 );

    SC_METHOD(thread_zext_ln19_1_fu_132_p1);
    sensitive << ( select_ln19_2_fu_124_p3 );

    SC_METHOD(thread_zext_ln19_2_fu_328_p1);
    sensitive << ( xor_ln19_fu_322_p2 );

    SC_METHOD(thread_zext_ln19_3_fu_344_p1);
    sensitive << ( xor_ln19_2_fu_338_p2 );

    SC_METHOD(thread_zext_ln19_fu_82_p1);
    sensitive << ( select_ln19_fu_74_p3 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mul_bytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_V, "(port)a_V");
    sc_trace(mVcdFile, b_V, "(port)b_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, trunc_ln19_fu_66_p1, "trunc_ln19_fu_66_p1");
    sc_trace(mVcdFile, trunc_ln19_1_fu_70_p1, "trunc_ln19_1_fu_70_p1");
    sc_trace(mVcdFile, select_ln19_fu_74_p3, "select_ln19_fu_74_p3");
    sc_trace(mVcdFile, tmp_fu_92_p3, "tmp_fu_92_p3");
    sc_trace(mVcdFile, shl_ln841_fu_86_p2, "shl_ln841_fu_86_p2");
    sc_trace(mVcdFile, tmp_1_fu_116_p3, "tmp_1_fu_116_p3");
    sc_trace(mVcdFile, shl_ln841_1_fu_108_p3, "shl_ln841_1_fu_108_p3");
    sc_trace(mVcdFile, select_ln19_2_fu_124_p3, "select_ln19_2_fu_124_p3");
    sc_trace(mVcdFile, tmp_2_fu_144_p3, "tmp_2_fu_144_p3");
    sc_trace(mVcdFile, shl_ln841_2_fu_136_p3, "shl_ln841_2_fu_136_p3");
    sc_trace(mVcdFile, tmp_3_fu_168_p3, "tmp_3_fu_168_p3");
    sc_trace(mVcdFile, shl_ln841_3_fu_160_p3, "shl_ln841_3_fu_160_p3");
    sc_trace(mVcdFile, trunc_ln841_fu_184_p1, "trunc_ln841_fu_184_p1");
    sc_trace(mVcdFile, shl_ln841_4_fu_188_p3, "shl_ln841_4_fu_188_p3");
    sc_trace(mVcdFile, tmp_4_fu_196_p3, "tmp_4_fu_196_p3");
    sc_trace(mVcdFile, or_ln719_fu_204_p2, "or_ln719_fu_204_p2");
    sc_trace(mVcdFile, tmp_5_fu_218_p3, "tmp_5_fu_218_p3");
    sc_trace(mVcdFile, select_ln25_fu_210_p3, "select_ln25_fu_210_p3");
    sc_trace(mVcdFile, shl_ln841_5_fu_234_p2, "shl_ln841_5_fu_234_p2");
    sc_trace(mVcdFile, tmp_6_fu_240_p3, "tmp_6_fu_240_p3");
    sc_trace(mVcdFile, xor_ln719_fu_248_p2, "xor_ln719_fu_248_p2");
    sc_trace(mVcdFile, tmp_7_fu_262_p3, "tmp_7_fu_262_p3");
    sc_trace(mVcdFile, select_ln25_1_fu_254_p3, "select_ln25_1_fu_254_p3");
    sc_trace(mVcdFile, shl_ln841_6_fu_278_p2, "shl_ln841_6_fu_278_p2");
    sc_trace(mVcdFile, tmp_8_fu_284_p3, "tmp_8_fu_284_p3");
    sc_trace(mVcdFile, xor_ln719_1_fu_292_p2, "xor_ln719_1_fu_292_p2");
    sc_trace(mVcdFile, tmp_9_fu_306_p3, "tmp_9_fu_306_p3");
    sc_trace(mVcdFile, select_ln25_2_fu_298_p3, "select_ln25_2_fu_298_p3");
    sc_trace(mVcdFile, zext_ln19_fu_82_p1, "zext_ln19_fu_82_p1");
    sc_trace(mVcdFile, select_ln19_1_fu_100_p3, "select_ln19_1_fu_100_p3");
    sc_trace(mVcdFile, xor_ln19_fu_322_p2, "xor_ln19_fu_322_p2");
    sc_trace(mVcdFile, zext_ln19_1_fu_132_p1, "zext_ln19_1_fu_132_p1");
    sc_trace(mVcdFile, select_ln19_3_fu_152_p3, "select_ln19_3_fu_152_p3");
    sc_trace(mVcdFile, xor_ln19_1_fu_332_p2, "xor_ln19_1_fu_332_p2");
    sc_trace(mVcdFile, zext_ln19_2_fu_328_p1, "zext_ln19_2_fu_328_p1");
    sc_trace(mVcdFile, xor_ln19_2_fu_338_p2, "xor_ln19_2_fu_338_p2");
    sc_trace(mVcdFile, select_ln19_4_fu_176_p3, "select_ln19_4_fu_176_p3");
    sc_trace(mVcdFile, select_ln19_5_fu_226_p3, "select_ln19_5_fu_226_p3");
    sc_trace(mVcdFile, select_ln19_6_fu_270_p3, "select_ln19_6_fu_270_p3");
    sc_trace(mVcdFile, select_ln19_7_fu_314_p3, "select_ln19_7_fu_314_p3");
    sc_trace(mVcdFile, xor_ln19_4_fu_354_p2, "xor_ln19_4_fu_354_p2");
    sc_trace(mVcdFile, xor_ln19_3_fu_348_p2, "xor_ln19_3_fu_348_p2");
    sc_trace(mVcdFile, xor_ln19_5_fu_360_p2, "xor_ln19_5_fu_360_p2");
    sc_trace(mVcdFile, zext_ln19_3_fu_344_p1, "zext_ln19_3_fu_344_p1");
#endif

    }
}

mul_bytes::~mul_bytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void mul_bytes::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void mul_bytes::thread_ap_return() {
    ap_return = (xor_ln19_5_fu_360_p2.read() ^ zext_ln19_3_fu_344_p1.read());
}

void mul_bytes::thread_or_ln719_fu_204_p2() {
    or_ln719_fu_204_p2 = (shl_ln841_4_fu_188_p3.read() | ap_const_lv8_1B);
}

void mul_bytes::thread_select_ln19_1_fu_100_p3() {
    select_ln19_1_fu_100_p3 = (!tmp_fu_92_p3.read()[0].is_01())? sc_lv<5>(): ((tmp_fu_92_p3.read()[0].to_bool())? shl_ln841_fu_86_p2.read(): ap_const_lv5_0);
}

void mul_bytes::thread_select_ln19_2_fu_124_p3() {
    select_ln19_2_fu_124_p3 = (!tmp_1_fu_116_p3.read()[0].is_01())? sc_lv<6>(): ((tmp_1_fu_116_p3.read()[0].to_bool())? shl_ln841_1_fu_108_p3.read(): ap_const_lv6_0);
}

void mul_bytes::thread_select_ln19_3_fu_152_p3() {
    select_ln19_3_fu_152_p3 = (!tmp_2_fu_144_p3.read()[0].is_01())? sc_lv<7>(): ((tmp_2_fu_144_p3.read()[0].to_bool())? shl_ln841_2_fu_136_p3.read(): ap_const_lv7_0);
}

void mul_bytes::thread_select_ln19_4_fu_176_p3() {
    select_ln19_4_fu_176_p3 = (!tmp_3_fu_168_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_3_fu_168_p3.read()[0].to_bool())? shl_ln841_3_fu_160_p3.read(): ap_const_lv8_0);
}

void mul_bytes::thread_select_ln19_5_fu_226_p3() {
    select_ln19_5_fu_226_p3 = (!tmp_5_fu_218_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_5_fu_218_p3.read()[0].to_bool())? select_ln25_fu_210_p3.read(): ap_const_lv8_0);
}

void mul_bytes::thread_select_ln19_6_fu_270_p3() {
    select_ln19_6_fu_270_p3 = (!tmp_7_fu_262_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_7_fu_262_p3.read()[0].to_bool())? select_ln25_1_fu_254_p3.read(): ap_const_lv8_0);
}

void mul_bytes::thread_select_ln19_7_fu_314_p3() {
    select_ln19_7_fu_314_p3 = (!tmp_9_fu_306_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_9_fu_306_p3.read()[0].to_bool())? select_ln25_2_fu_298_p3.read(): ap_const_lv8_0);
}

void mul_bytes::thread_select_ln19_fu_74_p3() {
    select_ln19_fu_74_p3 = (!trunc_ln19_fu_66_p1.read()[0].is_01())? sc_lv<4>(): ((trunc_ln19_fu_66_p1.read()[0].to_bool())? trunc_ln19_1_fu_70_p1.read(): ap_const_lv4_0);
}

void mul_bytes::thread_select_ln25_1_fu_254_p3() {
    select_ln25_1_fu_254_p3 = (!tmp_6_fu_240_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_6_fu_240_p3.read()[0].to_bool())? xor_ln719_fu_248_p2.read(): shl_ln841_5_fu_234_p2.read());
}

void mul_bytes::thread_select_ln25_2_fu_298_p3() {
    select_ln25_2_fu_298_p3 = (!tmp_8_fu_284_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_8_fu_284_p3.read()[0].to_bool())? xor_ln719_1_fu_292_p2.read(): shl_ln841_6_fu_278_p2.read());
}

void mul_bytes::thread_select_ln25_fu_210_p3() {
    select_ln25_fu_210_p3 = (!tmp_4_fu_196_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_4_fu_196_p3.read()[0].to_bool())? or_ln719_fu_204_p2.read(): shl_ln841_4_fu_188_p3.read());
}

void mul_bytes::thread_shl_ln841_1_fu_108_p3() {
    shl_ln841_1_fu_108_p3 = esl_concat<4,2>(trunc_ln19_1_fu_70_p1.read(), ap_const_lv2_0);
}

void mul_bytes::thread_shl_ln841_2_fu_136_p3() {
    shl_ln841_2_fu_136_p3 = esl_concat<4,3>(trunc_ln19_1_fu_70_p1.read(), ap_const_lv3_0);
}

void mul_bytes::thread_shl_ln841_3_fu_160_p3() {
    shl_ln841_3_fu_160_p3 = esl_concat<4,4>(trunc_ln19_1_fu_70_p1.read(), ap_const_lv4_0);
}

void mul_bytes::thread_shl_ln841_4_fu_188_p3() {
    shl_ln841_4_fu_188_p3 = esl_concat<3,5>(trunc_ln841_fu_184_p1.read(), ap_const_lv5_0);
}

void mul_bytes::thread_shl_ln841_5_fu_234_p2() {
    shl_ln841_5_fu_234_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): select_ln25_fu_210_p3.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void mul_bytes::thread_shl_ln841_6_fu_278_p2() {
    shl_ln841_6_fu_278_p2 = (!ap_const_lv8_1.is_01())? sc_lv<8>(): select_ln25_1_fu_254_p3.read() << (unsigned short)ap_const_lv8_1.to_uint();
}

void mul_bytes::thread_shl_ln841_fu_86_p2() {
    shl_ln841_fu_86_p2 = (!ap_const_lv5_1.is_01())? sc_lv<5>(): a_V.read() << (unsigned short)ap_const_lv5_1.to_uint();
}

void mul_bytes::thread_tmp_1_fu_116_p3() {
    tmp_1_fu_116_p3 = b_V.read().range(2, 2);
}

void mul_bytes::thread_tmp_2_fu_144_p3() {
    tmp_2_fu_144_p3 = b_V.read().range(3, 3);
}

void mul_bytes::thread_tmp_3_fu_168_p3() {
    tmp_3_fu_168_p3 = b_V.read().range(4, 4);
}

void mul_bytes::thread_tmp_4_fu_196_p3() {
    tmp_4_fu_196_p3 = a_V.read().range(3, 3);
}

void mul_bytes::thread_tmp_5_fu_218_p3() {
    tmp_5_fu_218_p3 = b_V.read().range(5, 5);
}

void mul_bytes::thread_tmp_6_fu_240_p3() {
    tmp_6_fu_240_p3 = select_ln25_fu_210_p3.read().range(7, 7);
}

void mul_bytes::thread_tmp_7_fu_262_p3() {
    tmp_7_fu_262_p3 = b_V.read().range(6, 6);
}

void mul_bytes::thread_tmp_8_fu_284_p3() {
    tmp_8_fu_284_p3 = select_ln25_1_fu_254_p3.read().range(7, 7);
}

void mul_bytes::thread_tmp_9_fu_306_p3() {
    tmp_9_fu_306_p3 = b_V.read().range(7, 7);
}

void mul_bytes::thread_tmp_fu_92_p3() {
    tmp_fu_92_p3 = b_V.read().range(1, 1);
}

void mul_bytes::thread_trunc_ln19_1_fu_70_p1() {
    trunc_ln19_1_fu_70_p1 = a_V.read().range(4-1, 0);
}

void mul_bytes::thread_trunc_ln19_fu_66_p1() {
    trunc_ln19_fu_66_p1 = b_V.read().range(1-1, 0);
}

void mul_bytes::thread_trunc_ln841_fu_184_p1() {
    trunc_ln841_fu_184_p1 = a_V.read().range(3-1, 0);
}

void mul_bytes::thread_xor_ln19_1_fu_332_p2() {
    xor_ln19_1_fu_332_p2 = (zext_ln19_1_fu_132_p1.read() ^ select_ln19_3_fu_152_p3.read());
}

void mul_bytes::thread_xor_ln19_2_fu_338_p2() {
    xor_ln19_2_fu_338_p2 = (xor_ln19_1_fu_332_p2.read() ^ zext_ln19_2_fu_328_p1.read());
}

void mul_bytes::thread_xor_ln19_3_fu_348_p2() {
    xor_ln19_3_fu_348_p2 = (select_ln19_4_fu_176_p3.read() ^ select_ln19_5_fu_226_p3.read());
}

void mul_bytes::thread_xor_ln19_4_fu_354_p2() {
    xor_ln19_4_fu_354_p2 = (select_ln19_6_fu_270_p3.read() ^ select_ln19_7_fu_314_p3.read());
}

void mul_bytes::thread_xor_ln19_5_fu_360_p2() {
    xor_ln19_5_fu_360_p2 = (xor_ln19_4_fu_354_p2.read() ^ xor_ln19_3_fu_348_p2.read());
}

void mul_bytes::thread_xor_ln19_fu_322_p2() {
    xor_ln19_fu_322_p2 = (zext_ln19_fu_82_p1.read() ^ select_ln19_1_fu_100_p3.read());
}

void mul_bytes::thread_xor_ln719_1_fu_292_p2() {
    xor_ln719_1_fu_292_p2 = (shl_ln841_6_fu_278_p2.read() ^ ap_const_lv8_1B);
}

void mul_bytes::thread_xor_ln719_fu_248_p2() {
    xor_ln719_fu_248_p2 = (shl_ln841_5_fu_234_p2.read() ^ ap_const_lv8_1B);
}

void mul_bytes::thread_zext_ln19_1_fu_132_p1() {
    zext_ln19_1_fu_132_p1 = esl_zext<7,6>(select_ln19_2_fu_124_p3.read());
}

void mul_bytes::thread_zext_ln19_2_fu_328_p1() {
    zext_ln19_2_fu_328_p1 = esl_zext<7,5>(xor_ln19_fu_322_p2.read());
}

void mul_bytes::thread_zext_ln19_3_fu_344_p1() {
    zext_ln19_3_fu_344_p1 = esl_zext<8,7>(xor_ln19_2_fu_338_p2.read());
}

void mul_bytes::thread_zext_ln19_fu_82_p1() {
    zext_ln19_fu_82_p1 = esl_zext<5,4>(select_ln19_fu_74_p3.read());
}

}

